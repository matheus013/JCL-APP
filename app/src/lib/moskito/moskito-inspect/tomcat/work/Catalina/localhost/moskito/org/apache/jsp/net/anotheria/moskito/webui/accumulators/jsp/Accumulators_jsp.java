/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.16
 * Generated at: 2018-07-10 13:37:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.net.anotheria.moskito.webui.accumulators.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Accumulators_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:length", org.apache.taglibs.standard.functions.Functions.class, "length", new Class[] {java.lang.Object.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/lib/moskito-webui-2.8.7.jar", Long.valueOf(1527002124000L));
    _jspx_dependants.put("/WEB-INF/lib/ano-tags-2.1.1.jar", Long.valueOf(1475585378000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1421557168000L));
    _jspx_dependants.put("jar:file:/home/matheus/JCL-APP/app/src/lib/moskito/moskito-inspect/tomcat/webapps/moskito/WEB-INF/lib/ano-tags-2.1.1.jar!/META-INF/ano-tags.tld", Long.valueOf(1475585374000L));
    _jspx_dependants.put("jar:file:/home/matheus/JCL-APP/app/src/lib/moskito/moskito-inspect/tomcat/webapps/moskito/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153395882000L));
    _jspx_dependants.put("jar:file:/home/matheus/JCL-APP/app/src/lib/moskito/moskito-inspect/tomcat/webapps/moskito/WEB-INF/lib/moskito-webui-2.8.7.jar!/META-INF/moskito-tags.tld", Long.valueOf(1527002120000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fnotPresent_0026_005fname;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fnotPresent_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.release();
    _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.release();
    _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.release();
    _005fjspx_005ftagPool_005fano_005fnotPresent_0026_005fname.release();
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid.release();
    _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.release();
    _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.release();
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.release();
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid.release();
    _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;

    java.lang.Object _jspx_value_1 = null;
    java.lang.Integer _jspx_i_1 = null;
    java.lang.Object _jspx_guard_1 = null;

    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../shared/jsp/Header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<section id=\"main\">\n");
      out.write("    ");
      if (_jspx_meth_ano_005fequal_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    <div class=\"content\">\n");
      out.write("\n");
      out.write("        ");
      //  ano:present
      net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f0 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
      boolean _jspx_th_ano_005fpresent_005f0_reused = false;
      try {
        _jspx_th_ano_005fpresent_005f0.setPageContext(_jspx_page_context);
        _jspx_th_ano_005fpresent_005f0.setParent(null);
        // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(18,8) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fpresent_005f0.setName("data");
        int _jspx_eval_ano_005fpresent_005f0 = _jspx_th_ano_005fpresent_005f0.doStartTag();
        if (_jspx_eval_ano_005fpresent_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("            ");
            out.write("\n");
            out.write("            ");
            //  ano:notPresent
            net.anotheria.tags.NotPresentTag _jspx_th_ano_005fnotPresent_005f0 = (net.anotheria.tags.NotPresentTag) _005fjspx_005ftagPool_005fano_005fnotPresent_0026_005fname.get(net.anotheria.tags.NotPresentTag.class);
            boolean _jspx_th_ano_005fnotPresent_005f0_reused = false;
            try {
              _jspx_th_ano_005fnotPresent_005f0.setPageContext(_jspx_page_context);
              _jspx_th_ano_005fnotPresent_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f0);
              // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(20,12) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fnotPresent_005f0.setName("multiple_set");
              int _jspx_eval_ano_005fnotPresent_005f0 = _jspx_th_ano_005fnotPresent_005f0.doStartTag();
              if (_jspx_eval_ano_005fnotPresent_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\n");
                  out.write("                <script type=\"text/javascript\">\n");
                  out.write("                    var data = [\n");
                  out.write("                        ");
                  //  ano:iterate
                  net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f0 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid.get(net.anotheria.tags.IterateTag.class);
                  boolean _jspx_th_ano_005fiterate_005f0_reused = false;
                  try {
                    _jspx_th_ano_005fiterate_005f0.setPageContext(_jspx_page_context);
                    _jspx_th_ano_005fiterate_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fnotPresent_005f0);
                    // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(23,24) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f0.setName("data");
                    // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(23,24) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f0.setType("net.anotheria.moskito.webui.accumulators.api.AccumulatedValueAO");
                    // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(23,24) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f0.setId("value");
                    // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(23,24) name = indexId type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f0.setIndexId("i");
                    int _jspx_eval_ano_005fiterate_005f0 = _jspx_th_ano_005fiterate_005f0.doStartTag();
                    if (_jspx_eval_ano_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      net.anotheria.moskito.webui.accumulators.api.AccumulatedValueAO value = null;
                      java.lang.Integer i = null;
                      if (_jspx_eval_ano_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                        out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f0);
                      }
                      value = (net.anotheria.moskito.webui.accumulators.api.AccumulatedValueAO) _jspx_page_context.findAttribute("value");
                      i = (java.lang.Integer) _jspx_page_context.findAttribute("i");
                      do {
                        out.write("\n");
                        out.write("                        ");
                        if (_jspx_meth_ano_005fnotEqual_005f0(_jspx_th_ano_005fiterate_005f0, _jspx_page_context))
                          return;
                        if (_jspx_meth_ano_005fwrite_005f1(_jspx_th_ano_005fiterate_005f0, _jspx_page_context))
                          return;
                        out.write("\n");
                        out.write("                        ");
                        int evalDoAfterBody = _jspx_th_ano_005fiterate_005f0.doAfterBody();
                        value = (net.anotheria.moskito.webui.accumulators.api.AccumulatedValueAO) _jspx_page_context.findAttribute("value");
                        i = (java.lang.Integer) _jspx_page_context.findAttribute("i");
                        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                          break;
                      } while (true);
                      if (_jspx_eval_ano_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                        out = _jspx_page_context.popBody();
                      }
                    }
                    if (_jspx_th_ano_005fiterate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid.reuse(_jspx_th_ano_005fiterate_005f0);
                    _jspx_th_ano_005fiterate_005f0_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f0_reused);
                  }
                  out.write("\n");
                  out.write("                    ];\n");
                  out.write("                </script>\n");
                  out.write("            ");
                  int evalDoAfterBody = _jspx_th_ano_005fnotPresent_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_ano_005fnotPresent_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fano_005fnotPresent_0026_005fname.reuse(_jspx_th_ano_005fnotPresent_005f0);
              _jspx_th_ano_005fnotPresent_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fnotPresent_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fnotPresent_005f0_reused);
            }
            out.write("\n");
            out.write("            ");
            out.write("\n");
            out.write("            ");
            //  ano:present
            net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f1 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
            boolean _jspx_th_ano_005fpresent_005f1_reused = false;
            try {
              _jspx_th_ano_005fpresent_005f1.setPageContext(_jspx_page_context);
              _jspx_th_ano_005fpresent_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f0);
              // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(30,12) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fpresent_005f1.setName("multiple_set");
              int _jspx_eval_ano_005fpresent_005f1 = _jspx_th_ano_005fpresent_005f1.doStartTag();
              if (_jspx_eval_ano_005fpresent_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\n");
                  out.write("                ");
                  //  ano:present
                  net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f2 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
                  boolean _jspx_th_ano_005fpresent_005f2_reused = false;
                  try {
                    _jspx_th_ano_005fpresent_005f2.setPageContext(_jspx_page_context);
                    _jspx_th_ano_005fpresent_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f1);
                    // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(31,16) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fpresent_005f2.setName("singleGraphData");
                    int _jspx_eval_ano_005fpresent_005f2 = _jspx_th_ano_005fpresent_005f2.doStartTag();
                    if (_jspx_eval_ano_005fpresent_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      do {
                        out.write("\n");
                        out.write("                    <script type=\"text/javascript\">\n");
                        out.write("                        var multipleGraphData = [];\n");
                        out.write("                        ");
                        //  ano:iterate
                        net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f1 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.get(net.anotheria.tags.IterateTag.class);
                        boolean _jspx_th_ano_005fiterate_005f1_reused = false;
                        try {
                          _jspx_th_ano_005fiterate_005f1.setPageContext(_jspx_page_context);
                          _jspx_th_ano_005fiterate_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f2);
                          // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(34,24) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_ano_005fiterate_005f1.setName("singleGraphData");
                          // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(34,24) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_ano_005fiterate_005f1.setType("net.anotheria.moskito.webui.accumulators.api.AccumulatedSingleGraphAO");
                          // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(34,24) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_ano_005fiterate_005f1.setId("singleGraph");
                          int _jspx_eval_ano_005fiterate_005f1 = _jspx_th_ano_005fiterate_005f1.doStartTag();
                          if (_jspx_eval_ano_005fiterate_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                            net.anotheria.moskito.webui.accumulators.api.AccumulatedSingleGraphAO singleGraph = null;
                            if (_jspx_eval_ano_005fiterate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f1);
                            }
                            singleGraph = (net.anotheria.moskito.webui.accumulators.api.AccumulatedSingleGraphAO) _jspx_page_context.findAttribute("singleGraph");
                            do {
                              out.write("\n");
                              out.write("                        multipleGraphData.push([\n");
                              out.write("                            ");
                              //  ano:iterate
                              net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f2 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid.get(net.anotheria.tags.IterateTag.class);
                              boolean _jspx_th_ano_005fiterate_005f2_reused = false;
                              try {
                              _jspx_th_ano_005fiterate_005f2.setPageContext(_jspx_page_context);
                              _jspx_th_ano_005fiterate_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f1);
                              // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(36,28) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_ano_005fiterate_005f2.setName("singleGraph");
                              // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(36,28) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_ano_005fiterate_005f2.setProperty("data");
                              // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(36,28) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_ano_005fiterate_005f2.setId("value");
                              // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(36,28) name = indexId type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_ano_005fiterate_005f2.setIndexId("i");
                              int _jspx_eval_ano_005fiterate_005f2 = _jspx_th_ano_005fiterate_005f2.doStartTag();
                              if (_jspx_eval_ano_005fiterate_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                              java.lang.Object value = null;
                              java.lang.Integer i = null;
                              if (_jspx_eval_ano_005fiterate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f2);
                              }
                              value = (java.lang.Object) _jspx_page_context.findAttribute("value");
                              i = (java.lang.Integer) _jspx_page_context.findAttribute("i");
                              do {
                              out.write("\n");
                              out.write("                            ");
                              if (_jspx_meth_ano_005fnotEqual_005f1(_jspx_th_ano_005fiterate_005f2, _jspx_page_context))
                              return;
                              if (_jspx_meth_ano_005fwrite_005f2(_jspx_th_ano_005fiterate_005f2, _jspx_page_context))
                              return;
                              out.write("\n");
                              out.write("                            ");
                              int evalDoAfterBody = _jspx_th_ano_005fiterate_005f2.doAfterBody();
                              value = (java.lang.Object) _jspx_page_context.findAttribute("value");
                              i = (java.lang.Integer) _jspx_page_context.findAttribute("i");
                              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                              break;
                              } while (true);
                              if (_jspx_eval_ano_005fiterate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = _jspx_page_context.popBody();
                              }
                              }
                              if (_jspx_th_ano_005fiterate_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                              return;
                              }
                              _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid.reuse(_jspx_th_ano_005fiterate_005f2);
                              _jspx_th_ano_005fiterate_005f2_reused = true;
                              } finally {
                              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f2, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f2_reused);
                              }
                              out.write("\n");
                              out.write("                        ]);\n");
                              out.write("                        ");
                              int evalDoAfterBody = _jspx_th_ano_005fiterate_005f1.doAfterBody();
                              singleGraph = (net.anotheria.moskito.webui.accumulators.api.AccumulatedSingleGraphAO) _jspx_page_context.findAttribute("singleGraph");
                              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                              break;
                            } while (true);
                            if (_jspx_eval_ano_005fiterate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = _jspx_page_context.popBody();
                            }
                          }
                          if (_jspx_th_ano_005fiterate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                            return;
                          }
                          _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.reuse(_jspx_th_ano_005fiterate_005f1);
                          _jspx_th_ano_005fiterate_005f1_reused = true;
                        } finally {
                          org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f1_reused);
                        }
                        out.write("\n");
                        out.write("                    </script>\n");
                        out.write("                ");
                        int evalDoAfterBody = _jspx_th_ano_005fpresent_005f2.doAfterBody();
                        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                          break;
                      } while (true);
                    }
                    if (_jspx_th_ano_005fpresent_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                    _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f2);
                    _jspx_th_ano_005fpresent_005f2_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f2, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f2_reused);
                  }
                  out.write("\n");
                  out.write("            ");
                  int evalDoAfterBody = _jspx_th_ano_005fpresent_005f1.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_ano_005fpresent_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f1);
              _jspx_th_ano_005fpresent_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f1_reused);
            }
            out.write("\n");
            out.write("\n");
            out.write("            ");
            out.write("\n");
            out.write("            ");
            if (_jspx_meth_ano_005fpresent_005f3(_jspx_th_ano_005fpresent_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("\n");
            out.write("            ");
            out.write("\n");
            out.write("            ");
            //  ano:present
            net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f4 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
            boolean _jspx_th_ano_005fpresent_005f4_reused = false;
            try {
              _jspx_th_ano_005fpresent_005f4.setPageContext(_jspx_page_context);
              _jspx_th_ano_005fpresent_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f0);
              // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(53,12) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fpresent_005f4.setName("thresholds");
              int _jspx_eval_ano_005fpresent_005f4 = _jspx_th_ano_005fpresent_005f4.doStartTag();
              if (_jspx_eval_ano_005fpresent_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\n");
                  out.write("                <script type=\"text/javascript\">\n");
                  out.write("                     var thresholds = [];\n");
                  out.write("                     ");
                  //  ano:iterate
                  net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f3 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.get(net.anotheria.tags.IterateTag.class);
                  boolean _jspx_th_ano_005fiterate_005f3_reused = false;
                  try {
                    _jspx_th_ano_005fiterate_005f3.setPageContext(_jspx_page_context);
                    _jspx_th_ano_005fiterate_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f4);
                    // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(56,21) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f3.setName("thresholds");
                    // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(56,21) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f3.setType("java.util.Map.Entry");
                    // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(56,21) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f3.setId("threshold");
                    int _jspx_eval_ano_005fiterate_005f3 = _jspx_th_ano_005fiterate_005f3.doStartTag();
                    if (_jspx_eval_ano_005fiterate_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      java.util.Map.Entry threshold = null;
                      if (_jspx_eval_ano_005fiterate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                        out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f3);
                      }
                      threshold = (java.util.Map.Entry) _jspx_page_context.findAttribute("threshold");
                      do {
                        out.write("\n");
                        out.write("                        thresholds.push({\n");
                        out.write("                            ");
                        //  ano:iterate
                        net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f4 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid.get(net.anotheria.tags.IterateTag.class);
                        boolean _jspx_th_ano_005fiterate_005f4_reused = false;
                        try {
                          _jspx_th_ano_005fiterate_005f4.setPageContext(_jspx_page_context);
                          _jspx_th_ano_005fiterate_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f3);
                          // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(58,28) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_ano_005fiterate_005f4.setName("threshold");
                          // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(58,28) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_ano_005fiterate_005f4.setProperty("value");
                          // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(58,28) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_ano_005fiterate_005f4.setId("guard");
                          // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(58,28) name = indexId type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_ano_005fiterate_005f4.setIndexId("i");
                          int _jspx_eval_ano_005fiterate_005f4 = _jspx_th_ano_005fiterate_005f4.doStartTag();
                          if (_jspx_eval_ano_005fiterate_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                            java.lang.Object guard = null;
                            java.lang.Integer i = null;
                            if (_jspx_eval_ano_005fiterate_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f4);
                            }
                            guard = (java.lang.Object) _jspx_page_context.findAttribute("guard");
                            i = (java.lang.Integer) _jspx_page_context.findAttribute("i");
                            do {
                              out.write("\n");
                              out.write("                                ");
                              if (_jspx_meth_ano_005fnotEqual_005f2(_jspx_th_ano_005fiterate_005f4, _jspx_page_context))
                              return;
                              out.write(' ');
                              if (_jspx_meth_ano_005fwrite_005f4(_jspx_th_ano_005fiterate_005f4, _jspx_page_context))
                              return;
                              out.write(':');
                              if (_jspx_meth_ano_005fwrite_005f5(_jspx_th_ano_005fiterate_005f4, _jspx_page_context))
                              return;
                              out.write("\n");
                              out.write("                            ");
                              int evalDoAfterBody = _jspx_th_ano_005fiterate_005f4.doAfterBody();
                              guard = (java.lang.Object) _jspx_page_context.findAttribute("guard");
                              i = (java.lang.Integer) _jspx_page_context.findAttribute("i");
                              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                              break;
                            } while (true);
                            if (_jspx_eval_ano_005fiterate_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = _jspx_page_context.popBody();
                            }
                          }
                          if (_jspx_th_ano_005fiterate_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                            return;
                          }
                          _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid.reuse(_jspx_th_ano_005fiterate_005f4);
                          _jspx_th_ano_005fiterate_005f4_reused = true;
                        } finally {
                          org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f4, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f4_reused);
                        }
                        out.write("\n");
                        out.write("                        })\n");
                        out.write("                     ");
                        int evalDoAfterBody = _jspx_th_ano_005fiterate_005f3.doAfterBody();
                        threshold = (java.util.Map.Entry) _jspx_page_context.findAttribute("threshold");
                        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                          break;
                      } while (true);
                      if (_jspx_eval_ano_005fiterate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                        out = _jspx_page_context.popBody();
                      }
                    }
                    if (_jspx_th_ano_005fiterate_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.reuse(_jspx_th_ano_005fiterate_005f3);
                    _jspx_th_ano_005fiterate_005f3_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f3, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f3_reused);
                  }
                  out.write("\n");
                  out.write("\n");
                  out.write("                     var thresholdsColors = (thresholds.length > 0) ? getThresholdsColors() : {};\n");
                  out.write("\n");
                  out.write("                     function getThresholdsColors() {\n");
                  out.write("                         var colors = {};\n");
                  out.write("\n");
                  out.write("                         ");
                  //  ano:present
                  net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f5 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
                  boolean _jspx_th_ano_005fpresent_005f5_reused = false;
                  try {
                    _jspx_th_ano_005fpresent_005f5.setPageContext(_jspx_page_context);
                    _jspx_th_ano_005fpresent_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f4);
                    // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(69,25) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fpresent_005f5.setName("thresholdGraphColors");
                    int _jspx_eval_ano_005fpresent_005f5 = _jspx_th_ano_005fpresent_005f5.doStartTag();
                    if (_jspx_eval_ano_005fpresent_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      do {
                        out.write("\n");
                        out.write("                             ");
                        //  ano:iterate
                        net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f5 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.get(net.anotheria.tags.IterateTag.class);
                        boolean _jspx_th_ano_005fiterate_005f5_reused = false;
                        try {
                          _jspx_th_ano_005fiterate_005f5.setPageContext(_jspx_page_context);
                          _jspx_th_ano_005fiterate_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f5);
                          // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(70,29) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_ano_005fiterate_005f5.setName("thresholdGraphColors");
                          // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(70,29) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_ano_005fiterate_005f5.setType("net.anotheria.moskito.webui.util.ThresholdGraphColor");
                          // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(70,29) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_ano_005fiterate_005f5.setId("thresholdGraphColor");
                          int _jspx_eval_ano_005fiterate_005f5 = _jspx_th_ano_005fiterate_005f5.doStartTag();
                          if (_jspx_eval_ano_005fiterate_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                            net.anotheria.moskito.webui.util.ThresholdGraphColor thresholdGraphColor = null;
                            if (_jspx_eval_ano_005fiterate_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f5);
                            }
                            thresholdGraphColor = (net.anotheria.moskito.webui.util.ThresholdGraphColor) _jspx_page_context.findAttribute("thresholdGraphColor");
                            do {
                              out.write("\n");
                              out.write("                                colors[\"");
                              if (_jspx_meth_ano_005fwrite_005f6(_jspx_th_ano_005fiterate_005f5, _jspx_page_context))
                              return;
                              out.write("\"] = \"");
                              if (_jspx_meth_ano_005fwrite_005f7(_jspx_th_ano_005fiterate_005f5, _jspx_page_context))
                              return;
                              out.write("\";\n");
                              out.write("                             ");
                              int evalDoAfterBody = _jspx_th_ano_005fiterate_005f5.doAfterBody();
                              thresholdGraphColor = (net.anotheria.moskito.webui.util.ThresholdGraphColor) _jspx_page_context.findAttribute("thresholdGraphColor");
                              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                              break;
                            } while (true);
                            if (_jspx_eval_ano_005fiterate_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = _jspx_page_context.popBody();
                            }
                          }
                          if (_jspx_th_ano_005fiterate_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                            return;
                          }
                          _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.reuse(_jspx_th_ano_005fiterate_005f5);
                          _jspx_th_ano_005fiterate_005f5_reused = true;
                        } finally {
                          org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f5, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f5_reused);
                        }
                        out.write("\n");
                        out.write("                         ");
                        int evalDoAfterBody = _jspx_th_ano_005fpresent_005f5.doAfterBody();
                        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                          break;
                      } while (true);
                    }
                    if (_jspx_th_ano_005fpresent_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                    _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f5);
                    _jspx_th_ano_005fpresent_005f5_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f5, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f5_reused);
                  }
                  out.write("\n");
                  out.write("\n");
                  out.write("                         colors.GREEN = colors.GREEN || \"#53d769\";\n");
                  out.write("                         colors.YELLOW = colors.YELLOW || \"#ffde00\";\n");
                  out.write("                         colors.ORANGE = colors.ORANGE || \"#ff8023\";\n");
                  out.write("                         colors.RED = colors.RED || \"#fc3e39\";\n");
                  out.write("                         colors.PURPLE = colors.PURPLE || \"#b44bc4\";\n");
                  out.write("\n");
                  out.write("                         return colors;\n");
                  out.write("                     }\n");
                  out.write("                </script>\n");
                  out.write("            ");
                  int evalDoAfterBody = _jspx_th_ano_005fpresent_005f4.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_ano_005fpresent_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f4);
              _jspx_th_ano_005fpresent_005f4_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f4, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f4_reused);
            }
            out.write("\n");
            out.write("\n");
            out.write("            ");
            out.write("\n");
            out.write("            ");
            if (_jspx_meth_ano_005fnotPresent_005f1(_jspx_th_ano_005fpresent_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("            ");
            out.write("\n");
            out.write("\n");
            out.write("            ");
            out.write("\n");
            out.write("            <div>\n");
            out.write("                ");
            //  ano:present
            net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f6 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
            boolean _jspx_th_ano_005fpresent_005f6_reused = false;
            try {
              _jspx_th_ano_005fpresent_005f6.setPageContext(_jspx_page_context);
              _jspx_th_ano_005fpresent_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f0);
              // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(123,16) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fpresent_005f6.setName("multiple_set");
              int _jspx_eval_ano_005fpresent_005f6 = _jspx_th_ano_005fpresent_005f6.doStartTag();
              if (_jspx_eval_ano_005fpresent_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\n");
                  out.write("                    ");
                  //  ano:iterate
                  net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f6 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.get(net.anotheria.tags.IterateTag.class);
                  boolean _jspx_th_ano_005fiterate_005f6_reused = false;
                  try {
                    _jspx_th_ano_005fiterate_005f6.setPageContext(_jspx_page_context);
                    _jspx_th_ano_005fiterate_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f6);
                    // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(124,20) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f6.setName("singleGraphData");
                    // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(124,20) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f6.setType("net.anotheria.moskito.webui.accumulators.api.AccumulatedSingleGraphAO");
                    // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(124,20) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f6.setId("singleGraph");
                    int _jspx_eval_ano_005fiterate_005f6 = _jspx_th_ano_005fiterate_005f6.doStartTag();
                    if (_jspx_eval_ano_005fiterate_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      net.anotheria.moskito.webui.accumulators.api.AccumulatedSingleGraphAO singleGraph = null;
                      if (_jspx_eval_ano_005fiterate_005f6 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                        out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f6);
                      }
                      singleGraph = (net.anotheria.moskito.webui.accumulators.api.AccumulatedSingleGraphAO) _jspx_page_context.findAttribute("singleGraph");
                      do {
                        out.write("\n");
                        out.write("                        <div class=\"box\" id=\"parentBox\">\n");
                        out.write("                            <div class=\"box-title\">\n");
                        out.write("                                <a class=\"accordion-toggle tooltip-bottom\" title=\"Close/Open\" data-toggle=\"collapse\"\n");
                        out.write("                                   href=\"#collapse-chart-");
                        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${singleGraph.nameForJS}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                        out.write("\"><i class=\"fa fa-caret-down\"></i></a>\n");
                        out.write("\n");
                        out.write("                                <h3 class=\"pull-left chart-header\">\n");
                        out.write("                                    ");
                        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${singleGraph.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                        out.write("\n");
                        out.write("                                </h3>\n");
                        out.write("\n");
                        out.write("                                <div class=\"box-right-nav dropdown\">\n");
                        out.write("                                    <a href=\"#\" data-target=\"#\" data-toggle=\"dropdown\"><i class=\"fa fa-cog\"></i></a>\n");
                        out.write("                                    <ul class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dLabel\">\n");
                        out.write("                                        <li><a href=\"\" class=\"save_as\">Screenshot</a></li>\n");
                        out.write("                                        ");
                        if (_jspx_meth_ano_005fiF_005f3(_jspx_th_ano_005fiterate_005f6, _jspx_page_context))
                          return;
                        out.write("\n");
                        out.write("                                    </ul>\n");
                        out.write("                                </div>\n");
                        out.write("\n");
                        out.write("                                <div class=\"box-right-nav\">\n");
                        out.write("                                    <a href=\"\" class=\"tooltip-bottom\" title=\"Refresh\"><i class=\"fa fa-refresh\"></i></a>\n");
                        out.write("                                    <a class=\"up tooltip-bottom\" title=\"Up\" href=\"#\"><i class=\"fa fa-angle-up\"></i></a>\n");
                        out.write("                                    <a class=\"down tooltip-bottom\" title=\"Down\" href=\"#\"><i\n");
                        out.write("                                            class=\"fa fa-angle-down\"></i></a>\n");
                        out.write("                                </div>\n");
                        out.write("                            </div>\n");
                        out.write("                            <div id=\"collapse-chart-");
                        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${singleGraph.nameForJS}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                        out.write("\"\n");
                        out.write("                                 class=\"box-content accordion-body collapse in\">\n");
                        out.write("                                <div class=\"paddner\">\n");
                        out.write("                                    <div id=\"chart_accum");
                        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${singleGraph.nameForJS}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                        out.write("\" class=\"accumulator-chart\"></div>\n");
                        out.write("                                </div>\n");
                        out.write("                            </div>\n");
                        out.write("                        </div>\n");
                        out.write("                    ");
                        int evalDoAfterBody = _jspx_th_ano_005fiterate_005f6.doAfterBody();
                        singleGraph = (net.anotheria.moskito.webui.accumulators.api.AccumulatedSingleGraphAO) _jspx_page_context.findAttribute("singleGraph");
                        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                          break;
                      } while (true);
                      if (_jspx_eval_ano_005fiterate_005f6 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                        out = _jspx_page_context.popBody();
                      }
                    }
                    if (_jspx_th_ano_005fiterate_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.reuse(_jspx_th_ano_005fiterate_005f6);
                    _jspx_th_ano_005fiterate_005f6_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f6, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f6_reused);
                  }
                  out.write("\n");
                  out.write("                ");
                  int evalDoAfterBody = _jspx_th_ano_005fpresent_005f6.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_ano_005fpresent_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f6);
              _jspx_th_ano_005fpresent_005f6_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f6, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f6_reused);
            }
            out.write("\n");
            out.write("            </div>\n");
            out.write("            ");
            out.write("\n");
            out.write("\n");
            out.write("            <script type=\"text/javascript\">\n");
            out.write("                //changing the order of multiple charts\n");
            out.write("                $(document).ready(function () {\n");
            out.write("                    $(\".up\").click(function () {\n");
            out.write("                        var pdiv = $(this).closest('#parentBox');\n");
            out.write("                        pdiv.insertBefore(pdiv.prev());\n");
            out.write("                        return false\n");
            out.write("                    });\n");
            out.write("                    $(\".down\").click(function () {\n");
            out.write("                        var pdiv = $(this).closest('#parentBox');\n");
            out.write("                        pdiv.insertAfter(pdiv.next());\n");
            out.write("                        return false\n");
            out.write("                    });\n");
            out.write("                });\n");
            out.write("            </script>\n");
            out.write("\n");
            out.write("            <script type=\"text/javascript\">\n");
            out.write("                var thresholds = thresholds || [];\n");
            out.write("                var thresholdsColors = thresholdsColors || {};\n");
            out.write("\n");
            out.write("                // Many charts\n");
            out.write("                if ('multipleGraphData' in window) {\n");
            out.write("                    var names = '");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${accNames}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("'.slice(1, -1).split(', ');\n");
            out.write("                    var containerSelectors = $('.accumulator-chart').map(function () {\n");
            out.write("                        return $(this).attr(\"id\");\n");
            out.write("                    });\n");
            out.write("\n");
            out.write("                    multipleGraphData.forEach(function (graphData, index) {\n");
            out.write("                        var chartParams = {\n");
            out.write("                            container: containerSelectors[index],\n");
            out.write("                            names: [names[index]],\n");
            out.write("                            data: graphData,\n");
            out.write("                            colors: accumulatorsColors,\n");
            out.write("                            type: '");
            if (_jspx_meth_ano_005fwrite_005f8(_jspx_th_ano_005fpresent_005f0, _jspx_page_context))
              return;
            out.write("',\n");
            out.write("                            title: names[index],\n");
            out.write("                            dataType: 'datetime',\n");
            out.write("                            options: {\n");
            out.write("                                legendsPerSlice: 7,\n");
            out.write("                                margin: {top: 20, right: 40, bottom: 30, left: 40}\n");
            out.write("                            }\n");
            out.write("                        };\n");
            out.write("\n");
            out.write("                        if (!isEmptyObject(thresholds[index])) {\n");
            out.write("                            addThresholdsToChart(thresholds[index], chartParams);\n");
            out.write("                        }\n");
            out.write("\n");
            out.write("                        chartEngineIniter.init(chartParams);\n");
            out.write("                    });\n");
            out.write("\n");
            out.write("                }\n");
            out.write("                // One chart with one or more lines\n");
            out.write("                else {\n");
            out.write("                    var names = ('");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${singleGraph.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("' && ['");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${singleGraph.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("']) || '");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${accNames}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("'.slice(1, -1).split(', ');\n");
            out.write("\n");
            out.write("                    var chartParams = {\n");
            out.write("                        container: 'chart_accum");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${singleGraph.nameForJS}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("',\n");
            out.write("                        names: names,\n");
            out.write("                        data: data,\n");
            out.write("                        colors: accumulatorsColors,\n");
            out.write("                        type: '");
            if (_jspx_meth_ano_005fwrite_005f9(_jspx_th_ano_005fpresent_005f0, _jspx_page_context))
              return;
            out.write("',\n");
            out.write("                        title: '',\n");
            out.write("                        dataType: 'datetime',\n");
            out.write("                        options: {\n");
            out.write("                            legendsPerSlice: 7,\n");
            out.write("                            margin: {top: 20, right: 40, bottom: 30, left: 40}\n");
            out.write("                        }\n");
            out.write("                    };\n");
            out.write("\n");
            out.write("                    if ((names.length === 1) && !isEmptyObject(thresholds[0])) {\n");
            out.write("                        addThresholdsToChart(thresholds[0], chartParams);\n");
            out.write("                    }\n");
            out.write("\n");
            out.write("                    chartEngineIniter.init(chartParams);\n");
            out.write("                }\n");
            out.write("\n");
            out.write("\n");
            out.write("                $('.refresh').click(function () {\n");
            out.write("                    location.reload(true);\n");
            out.write("                });\n");
            out.write("\n");
            out.write("                function addThresholdsToChart(thresholds, chartParams) {\n");
            out.write("                    for (var color in thresholds) {\n");
            out.write("                        if (thresholds.hasOwnProperty(color)) {\n");
            out.write("                            if (thresholdsColors.hasOwnProperty(color)) {\n");
            out.write("                                var gauge = thresholds[color];\n");
            out.write("                                var data = chartParams.data;\n");
            out.write("                                var legendColorName = color.substring(0, 1) + color.substring(1).toLowerCase() + \" Barrier\";\n");
            out.write("                                chartParams.colors.push({\"color\": thresholdsColors[color], \"name\": legendColorName});\n");
            out.write("                                chartParams.names.push(legendColorName);\n");
            out.write("                                for (var i = 0, length = data.length; i < length; i++) {\n");
            out.write("                                    data[i].push(gauge);\n");
            out.write("                                }\n");
            out.write("                            }\n");
            out.write("                        }\n");
            out.write("                    }\n");
            out.write("                }\n");
            out.write("\n");
            out.write("                function isEmptyObject(obj) {\n");
            out.write("                    for (var property in obj) {\n");
            out.write("                        if (obj.hasOwnProperty(property)) {\n");
            out.write("                            return false;\n");
            out.write("                        }\n");
            out.write("                    }\n");
            out.write("                    return true;\n");
            out.write("                }\n");
            out.write("\n");
            out.write("            </script>\n");
            out.write("        ");
            int evalDoAfterBody = _jspx_th_ano_005fpresent_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_ano_005fpresent_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f0);
        _jspx_th_ano_005fpresent_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f0_reused);
      }
      out.write("\n");
      out.write("\n");
      out.write("        <!-- selections of accumulators -->\n");
      out.write("        ");
      //  ano:present
      net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f7 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
      boolean _jspx_th_ano_005fpresent_005f7_reused = false;
      try {
        _jspx_th_ano_005fpresent_005f7.setPageContext(_jspx_page_context);
        _jspx_th_ano_005fpresent_005f7.setParent(null);
        // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(275,8) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fpresent_005f7.setName("accumulatorSetBeans");
        int _jspx_eval_ano_005fpresent_005f7 = _jspx_th_ano_005fpresent_005f7.doStartTag();
        if (_jspx_eval_ano_005fpresent_005f7 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("            <div class=\"box\">\n");
            out.write("                <div class=\"box-title\">\n");
            out.write("                    <a class=\"accordion-toggle tooltip-bottom\" title=\"Close/Open\" data-toggle=\"collapse\"\n");
            out.write("                       href=\"#collapselist2\"><i class=\"fa fa-caret-down\"></i></a>\n");
            out.write("\n");
            out.write("                    <h3 class=\"pull-left\">\n");
            out.write("                        Accumulator sets\n");
            out.write("                    </h3>\n");
            out.write("\n");
            out.write("                    <div class=\"box-right-nav\">\n");
            out.write("                        <a href=\"\" class=\"tooltip-bottom\" title=\"Help\"><i class=\"fa fa-info-circle\"></i></a>\n");
            out.write("                    </div>\n");
            out.write("                </div>\n");
            out.write("                <div id=\"collapselist2\" class=\"box-content accordion-body collapse in\">\n");
            out.write("                    <table class=\"table table-striped tablesorter\">\n");
            out.write("                        <thead>\n");
            out.write("                        <tr>\n");
            out.write("                            <th>Set<i class=\"fa fa-caret-down\"></i></th>\n");
            out.write("                            <th>Accumulators <i class=\"fa fa-caret-down\"></i></th>\n");
            out.write("                        </tr>\n");
            out.write("                        </thead>\n");
            out.write("                        <tbody>\n");
            out.write("                        ");
            //  ano:iterate
            net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f7 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.get(net.anotheria.tags.IterateTag.class);
            boolean _jspx_th_ano_005fiterate_005f7_reused = false;
            try {
              _jspx_th_ano_005fiterate_005f7.setPageContext(_jspx_page_context);
              _jspx_th_ano_005fiterate_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f7);
              // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(298,24) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f7.setId("acSet");
              // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(298,24) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f7.setName("accumulatorSetBeans");
              // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(298,24) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f7.setType("net.anotheria.moskito.webui.accumulators.bean.AccumulatorSetBean");
              int _jspx_eval_ano_005fiterate_005f7 = _jspx_th_ano_005fiterate_005f7.doStartTag();
              if (_jspx_eval_ano_005fiterate_005f7 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                net.anotheria.moskito.webui.accumulators.bean.AccumulatorSetBean acSet = null;
                if (_jspx_eval_ano_005fiterate_005f7 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f7);
                }
                acSet = (net.anotheria.moskito.webui.accumulators.bean.AccumulatorSetBean) _jspx_page_context.findAttribute("acSet");
                do {
                  out.write("\n");
                  out.write("                            <tr>\n");
                  out.write("                                <td><a href=\"");
                  out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${acSet.link}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                  out.write('"');
                  out.write('>');
                  out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${acSet.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                  out.write("</a></td>\n");
                  out.write("                                <td>");
                  out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${acSet.accumulatorNames}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                  out.write("</td>\n");
                  out.write("                            </tr>\n");
                  out.write("                        ");
                  int evalDoAfterBody = _jspx_th_ano_005fiterate_005f7.doAfterBody();
                  acSet = (net.anotheria.moskito.webui.accumulators.bean.AccumulatorSetBean) _jspx_page_context.findAttribute("acSet");
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_ano_005fiterate_005f7 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_ano_005fiterate_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.reuse(_jspx_th_ano_005fiterate_005f7);
              _jspx_th_ano_005fiterate_005f7_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f7, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f7_reused);
            }
            out.write("\n");
            out.write("                        </tbody>\n");
            out.write("                    </table>\n");
            out.write("                </div>\n");
            out.write("            </div>\n");
            out.write("        ");
            int evalDoAfterBody = _jspx_th_ano_005fpresent_005f7.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_ano_005fpresent_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f7);
        _jspx_th_ano_005fpresent_005f7_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f7, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f7_reused);
      }
      out.write("\n");
      out.write("        <!-- /selections of accumulators -->\n");
      out.write("\n");
      out.write("        <div class=\"box\">\n");
      out.write("            <form action=\"\" method=\"get\">\n");
      out.write("                <input type=\"hidden\" name=\"remoteConnection\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${remoteLink}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\n");
      out.write("                <div class=\"box-title\">\n");
      out.write("                    <a class=\"accordion-toggle tooltip-bottom\" title=\"Close/Open\" data-toggle=\"collapse\"\n");
      out.write("                       href=\"#collapselist\"><i class=\"fa fa-caret-down\"></i></a>\n");
      out.write("\n");
      out.write("                    <h3 class=\"pull-left\">\n");
      out.write("                        Accumulators\n");
      out.write("                    </h3>\n");
      out.write("\n");
      out.write("                    <div class=\"box-right-nav\">\n");
      out.write("                        <a href=\"\" class=\"tooltip-bottom\" title=\"Help\"><i class=\"fa fa-info-circle\"></i></a>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div id=\"collapselist\" class=\"box-content accordion-body collapse in\">\n");
      out.write("                    <table class=\"table table-striped tablesorter\">\n");
      out.write("                        <thead>\n");
      out.write("                        <tr>\n");
      out.write("                            <th class=\"{sorter: false, filter: false}\"><input type=\"checkbox\" id=\"checkAll\"/> </th>\n");
      out.write("                            <th>Name<i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                            <th>Path <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                            <th>Values <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                            <th>Last Timestamp <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                            <th class=\"th-actions\"></th>\n");
      out.write("                        </tr>\n");
      out.write("                        </thead>\n");
      out.write("                        <tbody>\n");
      out.write("                        ");
      //  ano:iterate
      net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f8 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid.get(net.anotheria.tags.IterateTag.class);
      boolean _jspx_th_ano_005fiterate_005f8_reused = false;
      try {
        _jspx_th_ano_005fiterate_005f8.setPageContext(_jspx_page_context);
        _jspx_th_ano_005fiterate_005f8.setParent(null);
        // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(341,24) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f8.setName("accumulators");
        // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(341,24) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f8.setType("net.anotheria.moskito.webui.accumulators.api.AccumulatorDefinitionAO");
        // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(341,24) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f8.setId("accumulator");
        // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(341,24) name = indexId type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f8.setIndexId("index");
        int _jspx_eval_ano_005fiterate_005f8 = _jspx_th_ano_005fiterate_005f8.doStartTag();
        if (_jspx_eval_ano_005fiterate_005f8 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          net.anotheria.moskito.webui.accumulators.api.AccumulatorDefinitionAO accumulator = null;
          java.lang.Integer index = null;
          if (_jspx_eval_ano_005fiterate_005f8 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f8);
          }
          accumulator = (net.anotheria.moskito.webui.accumulators.api.AccumulatorDefinitionAO) _jspx_page_context.findAttribute("accumulator");
          index = (java.lang.Integer) _jspx_page_context.findAttribute("index");
          do {
            out.write("\n");
            out.write("                            <tr>\n");
            out.write("                                <td><input type=\"checkbox\" class=\"checktr\" name=\"id_");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${accumulator.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" value=\"set\"\n");
            out.write("                                           ");
            //  ano:present
            net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f8 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
            boolean _jspx_th_ano_005fpresent_005f8_reused = false;
            try {
              _jspx_th_ano_005fpresent_005f8.setPageContext(_jspx_page_context);
              _jspx_th_ano_005fpresent_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f8);
              // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(346,43) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fpresent_005f8.setName("id_"+accumulator.getId()+"_set");
              int _jspx_eval_ano_005fpresent_005f8 = _jspx_th_ano_005fpresent_005f8.doStartTag();
              if (_jspx_eval_ano_005fpresent_005f8 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("checked=\"checked\"");
                  int evalDoAfterBody = _jspx_th_ano_005fpresent_005f8.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_ano_005fpresent_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f8);
              _jspx_th_ano_005fpresent_005f8_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f8, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f8_reused);
            }
            out.write("/>\n");
            out.write("                                </td>\n");
            out.write("                                <td>");
            if (_jspx_meth_mos_005fdeepLink_005f0(_jspx_th_ano_005fiterate_005f8, _jspx_page_context))
              return;
            out.write("</td>\n");
            out.write("                                <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${accumulator.path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                                <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${accumulator.numberOfValues}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                                <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${accumulator.lastValueTimestamp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                                <td class=\"actions-links\">\n");
            out.write("                                    <a href=\"#mskAccumulatorDelete\" data-toggle=\"modal\"\n");
            out.write("                                       data-target=\"#mskAccumulatorDelete\" data-id=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${accumulator.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\n");
            out.write("                                       class=\"action-icon delete-icon tooltip-bottom\" title=\"Delete\"><i\n");
            out.write("                                            class=\"fa fa-ban\"></i></a>\n");
            out.write("                                    ");
            if (_jspx_meth_mos_005fdeepLink_005f1(_jspx_th_ano_005fiterate_005f8, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                </td>\n");
            out.write("                            </tr>\n");
            out.write("                        ");
            int evalDoAfterBody = _jspx_th_ano_005fiterate_005f8.doAfterBody();
            accumulator = (net.anotheria.moskito.webui.accumulators.api.AccumulatorDefinitionAO) _jspx_page_context.findAttribute("accumulator");
            index = (java.lang.Integer) _jspx_page_context.findAttribute("index");
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_ano_005fiterate_005f8 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_ano_005fiterate_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid.reuse(_jspx_th_ano_005fiterate_005f8);
        _jspx_th_ano_005fiterate_005f8_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f8, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f8_reused);
      }
      out.write("\n");
      out.write("                        </tbody>\n");
      out.write("                    </table>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div class=\"box-footer fixed\">\n");
      out.write("                    <div class=\"fixed-box\">\n");
      out.write("                        <div class=\"form-inline\">\n");
      out.write("                            <div class=\"form-group btns\">\n");
      out.write("                                <button class=\"btn btn-default btn-submit\">Submit</button>\n");
      out.write("                                <button class=\"btn btn-default btn-clear hide\">Clear</button>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                (Mode:\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"radio\">\n");
      out.write("                                <label>\n");
      out.write("                                    <input type=\"radio\"\n");
      out.write("                                           ");
      if (_jspx_meth_ano_005fequal_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                                           value=\"combined\" name=\"mode\"> combine\n");
      out.write("                                </label>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"radio\">\n");
      out.write("                                <label>\n");
      out.write("                                    <input type=\"radio\" value=\"normalized\" name=\"mode\"\n");
      out.write("                                           ");
      if (_jspx_meth_ano_005fequal_005f2(_jspx_page_context))
        return;
      out.write(">\n");
      out.write("                                    combine and normalize\n");
      out.write("                                </label>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"radio\">\n");
      out.write("                                <label>\n");
      out.write("                                    <input type=\"radio\" value=\"multiple\" name=\"mode\"\n");
      out.write("                                           ");
      if (_jspx_meth_ano_005fequal_005f3(_jspx_page_context))
        return;
      out.write(">\n");
      out.write("                                    multiple graphs\n");
      out.write("                                </label>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                )\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"checkbox\">\n");
      out.write("                                <label>\n");
      out.write("                                    <input type=\"checkbox\" name=\"withThresholds\"\n");
      out.write("                                           ");
      if (_jspx_meth_ano_005fequal_005f4(_jspx_page_context))
        return;
      out.write(">\n");
      out.write("                                    With Thresholds\n");
      out.write("                                </label>\n");
      out.write("                            </div>\n");
      out.write("\n");
      out.write("                            <input type=\"hidden\" value=\"200\" name=\"maxValues\">\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"modal fade modal-danger\" id=\"mskAccumulatorDelete\" tabindex=\"-1\" role=\"dialog\"\n");
      out.write("         aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n");
      out.write("        <div class=\"modal-dialog\">\n");
      out.write("            <div class=\"modal-content\">\n");
      out.write("                <div class=\"modal-header\">\n");
      out.write("                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n");
      out.write("                    <h4 class=\"modal-title\" id=\"myModalLabel\">Delete this Accumulator?</h4>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"modal-footer text-center\">\n");
      out.write("                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n");
      out.write("                    <a href=\"#\" class=\"btn btn-danger accumulator-delete-confirm\">Delete</a>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../shared/jsp/Footer.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("        $('.actions-links').on('click', '.delete-icon', function () {\n");
      out.write("            var dataid = $(this).attr('data-id');\n");
      out.write("            $('.accumulator-delete-confirm').attr(\"href\", \"mskAccumulatorDelete?pId=\" + dataid);\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        $(window).scroll(function () {\n");
      out.write("            if ($(document).scrollTop() >= $(document).height() - $(window).height() - 180) {\n");
      out.write("                $('.box-footer').removeClass('fixed');\n");
      out.write("            } else if ($(document).scrollTop() < $(document).height() - $(window).height()) {\n");
      out.write("                $('.box-footer').addClass('fixed');\n");
      out.write("            }\n");
      out.write("        });//scroll\n");
      out.write("\n");
      out.write("        $('.checktr:checked').closest('tr').addClass('checked');\n");
      out.write("        if ($('.checktr').is(':checked')) {\n");
      out.write("            $('.fixed-box .btn-submit').addClass('btn-success');\n");
      out.write("            $('.fixed-box .btn-clear').removeClass('hide');\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        $('.fixed-box .btn-clear').click(function () {\n");
      out.write("            $('.table tr').removeClass('checked');\n");
      out.write("            $('.checktr').prop('checked', false);\n");
      out.write("            $(this).addClass('hide');\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        $('.table tbody tr')\n");
      out.write("                .filter(':has(:checkbox:checked)')\n");
      out.write("                .addClass('checked')\n");
      out.write("                .end()\n");
      out.write("                .click(function (event) {\n");
      out.write("                    $(this).toggleClass('checked');\n");
      out.write("                    if (event.target.type !== 'checkbox') {\n");
      out.write("                        $(':checkbox', this).prop('checked', function () {\n");
      out.write("                            return !this.checked;\n");
      out.write("                        });\n");
      out.write("                    }\n");
      out.write("                    if ($('.checktr').is(':checked')) {\n");
      out.write("                        $('.fixed-box .btn-submit').addClass('btn-success');\n");
      out.write("                        $('.fixed-box .btn-clear').removeClass('hide');\n");
      out.write("                    }\n");
      out.write("                    else {\n");
      out.write("                        $('.fixed-box .btn-submit').removeClass('btn-success');\n");
      out.write("                        $('.fixed-box .btn-clear').addClass('hide');\n");
      out.write("                    }\n");
      out.write("                    if ($('.checktr:not(:checked)').length > 0) {\n");
      out.write("                        $('#checkAll').prop( \"checked\", false );\n");
      out.write("                    } else {\n");
      out.write("                        $('#checkAll').prop( \"checked\", true );\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("\n");
      out.write("        $('#checkAll').click(function() {\n");
      out.write("            var checked = $(this).prop('checked');\n");
      out.write("            var checkboxes;\n");
      out.write("            if (checked) {\n");
      out.write("                checkboxes = $('.checktr:not(:checked)');\n");
      out.write("            } else {\n");
      out.write("                checkboxes = $('.checktr:checked');\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            if (checkboxes.length > 0) {\n");
      out.write("                checkboxes.click();\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("        $('.save_as').click( function(event) {\n");
      out.write("            event.preventDefault();\n");
      out.write("            event.stopPropagation();\n");
      out.write("            var chartWidth = 1120,\n");
      out.write("                    chartHeight = 300,\n");
      out.write("                    margin = 40;\n");
      out.write("\n");
      out.write("            var svgOrigin = $(event.target).closest(\".box\").find(\"svg\")[0];\n");
      out.write("            //copy svg chart\n");
      out.write("            var svg = svgOrigin.cloneNode(true);\n");
      out.write("\n");
      out.write("            svg.setAttribute(\"style\", \"background-color: #FFFFFF;\");\n");
      out.write("            svg.setAttribute(\"x\",margin);\n");
      out.write("            svg.setAttribute(\"y\",margin);\n");
      out.write("\n");
      out.write("\n");
      out.write("            var css = '.axis path,'+\n");
      out.write("            '.axis line {'+\n");
      out.write("                'fill: none;'+\n");
      out.write("                'stroke: #000;'+\n");
      out.write("                'shape-rendering: crispEdges;'+\n");
      out.write("            '}'+\n");
      out.write("            '.legend, .tick {'+\n");
      out.write("                'font: 12px sans-serif;'+\n");
      out.write("            '}'+\n");
      out.write("\n");
      out.write("            '.line {'+\n");
      out.write("                'fill: none;'+\n");
      out.write("                'stroke: steelblue;'+\n");
      out.write("                'stroke-width: 1.5px;'+\n");
      out.write("            '}'+\n");
      out.write("\n");
      out.write("            '.line.hover {'+\n");
      out.write("            'fill: none;'+\n");
      out.write("                'stroke: steelblue;'+\n");
      out.write("                'stroke-width: 3.0px;'+\n");
      out.write("            '}'+\n");
      out.write("\n");
      out.write("            '.grid .tick {'+\n");
      out.write("                'stroke: lightgrey;'+\n");
      out.write("                'opacity: 0.7;'+\n");
      out.write("            '}'+\n");
      out.write("            '.grid path {'+\n");
      out.write("                'stroke-width: 0;'+\n");
      out.write("            '}';\n");
      out.write("\n");
      out.write("            var style = document.createElement('style');\n");
      out.write("            style.type = 'text/css';\n");
      out.write("            if (style.styleSheet){\n");
      out.write("                style.styleSheet.cssText = css;\n");
      out.write("            } else {\n");
      out.write("                style.appendChild(document.createTextNode(css));\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            svg.appendChild(style);\n");
      out.write("\n");
      out.write("            var svgData = new XMLSerializer().serializeToString(svg);\n");
      out.write("            svgData ='<svg xmlns=\"http://www.w3.org/2000/svg\"  style=\"background-color: #FFFFFF;\" width=\"1200\" height=\"380\" >' + svgData + '</svg>';\n");
      out.write("\n");
      out.write("            var canvas = document.createElement(\"canvas\");\n");
      out.write("            canvas.width  = chartWidth + 2*margin;\n");
      out.write("            canvas.height = chartHeight + 2*margin;\n");
      out.write("            var ctx = canvas.getContext(\"2d\");\n");
      out.write("            ctx.fillStyle=\"white\";\n");
      out.write("            ctx.fill();\n");
      out.write("\n");
      out.write("            var img = document.createElement(\"img\");\n");
      out.write("            window.unescape = window.unescape || window.decodeURI;\n");
      out.write("            var img = document.createElement(\"img\");\n");
      out.write("            var encoded_svg = btoa(svgData.replace(/[\\u00A0-\\u2666]/g, function(c) {\n");
      out.write("                return '&#' + c.charCodeAt(0) + ';';\n");
      out.write("            }));\n");
      out.write("            img.setAttribute(\"src\", \"data:image/svg+xml;base64,\" + encoded_svg);\n");
      out.write("            var file_name = getChartFileName();\n");
      out.write("\n");
      out.write("            img.onload = function () {\n");
      out.write("                ctx.drawImage(img, 0, 0);\n");
      out.write("                var canvasdata = canvas.toDataURL(\"image/png\")\n");
      out.write("                var a = document.createElement(\"a\");\n");
      out.write("\n");
      out.write("                a.download = file_name + \".png\";\n");
      out.write("                a.href = canvasdata;\n");
      out.write("                document.body.appendChild(a);\n");
      out.write("                a.click();\n");
      out.write("\n");
      out.write("            };\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        function getChartFileName() {\n");
      out.write("            var t = new Date($.now());\n");
      out.write("            var current_date = t.getFullYear()+'-'+ t.getMonth()+'-'+ t.getDate()+'__'+t.getHours()+'-'+ t.getMinutes()+'-'+ t.getSeconds();\n");
      out.write("            return $.trim($(event.target).closest(\".box\").find('.chart-header').text()).split(' ').join('_')+'_'+current_date;\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("\n");
      out.write("</section>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_ano_005fequal_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:equal
    net.anotheria.tags.EqualTag _jspx_th_ano_005fequal_005f0 = (net.anotheria.tags.EqualTag) _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.get(net.anotheria.tags.EqualTag.class);
    boolean _jspx_th_ano_005fequal_005f0_reused = false;
    try {
      _jspx_th_ano_005fequal_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fequal_005f0.setParent(null);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(10,4) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f0.setName("newAccumulatorAdded");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(10,4) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f0.setValue("true");
      int _jspx_eval_ano_005fequal_005f0 = _jspx_th_ano_005fequal_005f0.doStartTag();
      if (_jspx_eval_ano_005fequal_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("        <div class=\"alert alert-success alert-dismissable\">\n");
          out.write("            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>\n");
          out.write("            Accumulator ");
          if (_jspx_meth_ano_005fwrite_005f0(_jspx_th_ano_005fequal_005f0, _jspx_page_context))
            return true;
          out.write(" added!\n");
          out.write("        </div>\n");
          out.write("    ");
          int evalDoAfterBody = _jspx_th_ano_005fequal_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fequal_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.reuse(_jspx_th_ano_005fequal_005f0);
      _jspx_th_ano_005fequal_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fequal_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fequal_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fequal_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f0 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f0_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fequal_005f0);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(13,24) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f0.setName("newAccumulatorName");
      int _jspx_eval_ano_005fwrite_005f0 = _jspx_th_ano_005fwrite_005f0.doStartTag();
      if (_jspx_th_ano_005fwrite_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f0);
      _jspx_th_ano_005fwrite_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fnotEqual_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:notEqual
    net.anotheria.tags.NotEqualTag _jspx_th_ano_005fnotEqual_005f0 = (net.anotheria.tags.NotEqualTag) _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.get(net.anotheria.tags.NotEqualTag.class);
    boolean _jspx_th_ano_005fnotEqual_005f0_reused = false;
    try {
      _jspx_th_ano_005fnotEqual_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fnotEqual_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f0);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(24,24) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f0.setName("i");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(24,24) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f0.setValue("0");
      int _jspx_eval_ano_005fnotEqual_005f0 = _jspx_th_ano_005fnotEqual_005f0.doStartTag();
      if (_jspx_eval_ano_005fnotEqual_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(',');
          out.write(' ');
          int evalDoAfterBody = _jspx_th_ano_005fnotEqual_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fnotEqual_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.reuse(_jspx_th_ano_005fnotEqual_005f0);
      _jspx_th_ano_005fnotEqual_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fnotEqual_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fnotEqual_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f1 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f1_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f1.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f0);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(24,74) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f1.setName("value");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(24,74) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f1.setProperty("JSONWithNumericTimestamp");
      int _jspx_eval_ano_005fwrite_005f1 = _jspx_th_ano_005fwrite_005f1.doStartTag();
      if (_jspx_th_ano_005fwrite_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f1);
      _jspx_th_ano_005fwrite_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fnotEqual_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:notEqual
    net.anotheria.tags.NotEqualTag _jspx_th_ano_005fnotEqual_005f1 = (net.anotheria.tags.NotEqualTag) _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.get(net.anotheria.tags.NotEqualTag.class);
    boolean _jspx_th_ano_005fnotEqual_005f1_reused = false;
    try {
      _jspx_th_ano_005fnotEqual_005f1.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fnotEqual_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f2);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(37,28) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f1.setName("i");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(37,28) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f1.setValue("0");
      int _jspx_eval_ano_005fnotEqual_005f1 = _jspx_th_ano_005fnotEqual_005f1.doStartTag();
      if (_jspx_eval_ano_005fnotEqual_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(',');
          out.write(' ');
          int evalDoAfterBody = _jspx_th_ano_005fnotEqual_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fnotEqual_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.reuse(_jspx_th_ano_005fnotEqual_005f1);
      _jspx_th_ano_005fnotEqual_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fnotEqual_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fnotEqual_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f2 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f2_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f2.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f2);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(37,78) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f2.setName("value");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(37,78) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f2.setProperty("JSONWithNumericTimestamp");
      int _jspx_eval_ano_005fwrite_005f2 = _jspx_th_ano_005fwrite_005f2.doStartTag();
      if (_jspx_th_ano_005fwrite_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f2);
      _jspx_th_ano_005fwrite_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f2, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fpresent_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fpresent_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:present
    net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f3 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
    boolean _jspx_th_ano_005fpresent_005f3_reused = false;
    try {
      _jspx_th_ano_005fpresent_005f3.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fpresent_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f0);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(46,12) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fpresent_005f3.setName("accumulatorsColors");
      int _jspx_eval_ano_005fpresent_005f3 = _jspx_th_ano_005fpresent_005f3.doStartTag();
      if (_jspx_eval_ano_005fpresent_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                <script type=\"text/javascript\">\n");
          out.write("                    var accumulatorsColors = ");
          if (_jspx_meth_ano_005fwrite_005f3(_jspx_th_ano_005fpresent_005f3, _jspx_page_context))
            return true;
          out.write(";\n");
          out.write("                </script>\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_ano_005fpresent_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fpresent_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f3);
      _jspx_th_ano_005fpresent_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f3, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fpresent_005f3, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f3 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f3_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f3.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f3);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(48,45) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f3.setName("accumulatorsColors");
      int _jspx_eval_ano_005fwrite_005f3 = _jspx_th_ano_005fwrite_005f3.doStartTag();
      if (_jspx_th_ano_005fwrite_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f3);
      _jspx_th_ano_005fwrite_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f3, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fnotEqual_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:notEqual
    net.anotheria.tags.NotEqualTag _jspx_th_ano_005fnotEqual_005f2 = (net.anotheria.tags.NotEqualTag) _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.get(net.anotheria.tags.NotEqualTag.class);
    boolean _jspx_th_ano_005fnotEqual_005f2_reused = false;
    try {
      _jspx_th_ano_005fnotEqual_005f2.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fnotEqual_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f4);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(59,32) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f2.setName("i");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(59,32) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f2.setValue("0");
      int _jspx_eval_ano_005fnotEqual_005f2 = _jspx_th_ano_005fnotEqual_005f2.doStartTag();
      if (_jspx_eval_ano_005fnotEqual_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(',');
          int evalDoAfterBody = _jspx_th_ano_005fnotEqual_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fnotEqual_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.reuse(_jspx_th_ano_005fnotEqual_005f2);
      _jspx_th_ano_005fnotEqual_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fnotEqual_005f2, _jsp_getInstanceManager(), _jspx_th_ano_005fnotEqual_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f4 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f4_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f4.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f4);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(59,82) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f4.setName("guard");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(59,82) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f4.setProperty("status");
      int _jspx_eval_ano_005fwrite_005f4 = _jspx_th_ano_005fwrite_005f4.doStartTag();
      if (_jspx_th_ano_005fwrite_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f4);
      _jspx_th_ano_005fwrite_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f4, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f5 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f5_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f5.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f4);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(59,126) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f5.setName("guard");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(59,126) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f5.setProperty("value");
      int _jspx_eval_ano_005fwrite_005f5 = _jspx_th_ano_005fwrite_005f5.doStartTag();
      if (_jspx_th_ano_005fwrite_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f5);
      _jspx_th_ano_005fwrite_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f5, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f6 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f6_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f6.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f5);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(71,40) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f6.setName("thresholdGraphColor");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(71,40) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f6.setProperty("status");
      int _jspx_eval_ano_005fwrite_005f6 = _jspx_th_ano_005fwrite_005f6.doStartTag();
      if (_jspx_th_ano_005fwrite_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f6);
      _jspx_th_ano_005fwrite_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f6, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f7 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f7_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f7.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f5);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(71,103) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f7.setName("thresholdGraphColor");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(71,103) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f7.setProperty("color");
      int _jspx_eval_ano_005fwrite_005f7 = _jspx_th_ano_005fwrite_005f7.doStartTag();
      if (_jspx_th_ano_005fwrite_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f7);
      _jspx_th_ano_005fwrite_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f7, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fnotPresent_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fpresent_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:notPresent
    net.anotheria.tags.NotPresentTag _jspx_th_ano_005fnotPresent_005f1 = (net.anotheria.tags.NotPresentTag) _005fjspx_005ftagPool_005fano_005fnotPresent_0026_005fname.get(net.anotheria.tags.NotPresentTag.class);
    boolean _jspx_th_ano_005fnotPresent_005f1_reused = false;
    try {
      _jspx_th_ano_005fnotPresent_005f1.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fnotPresent_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f0);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(87,12) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotPresent_005f1.setName("multiple_set");
      int _jspx_eval_ano_005fnotPresent_005f1 = _jspx_th_ano_005fnotPresent_005f1.doStartTag();
      if (_jspx_eval_ano_005fnotPresent_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                <div class=\"box\">\n");
          out.write("                    <div class=\"box-title\">\n");
          out.write("                        <a class=\"accordion-toggle tooltip-bottom\" title=\"Close/Open\" data-toggle=\"collapse\"\n");
          out.write("                           href=\"#collapse-chart\"><i class=\"fa fa-caret-down\"></i></a>\n");
          out.write("\n");
          out.write("                        <h3 class=\"pull-left chart-header\">\n");
          out.write("                            ");
          if (_jspx_meth_ano_005fiF_005f0(_jspx_th_ano_005fnotPresent_005f1, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                            ");
          if (_jspx_meth_ano_005fiF_005f1(_jspx_th_ano_005fnotPresent_005f1, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                        </h3>\n");
          out.write("\n");
          out.write("                        <div class=\"box-right-nav dropdown\">\n");
          out.write("                            <a href=\"#\" data-target=\"#\" data-toggle=\"dropdown\"><i class=\"fa fa-cog\"></i></a>\n");
          out.write("                            <ul class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dLabel\">\n");
          out.write("                                <li><a href=\"\" class=\"save_as\">Screenshot</a></li>\n");
          out.write("                                ");
          if (_jspx_meth_ano_005fiF_005f2(_jspx_th_ano_005fnotPresent_005f1, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                            </ul>\n");
          out.write("                        </div>\n");
          out.write("                    </div>\n");
          out.write("                    <div id=\"collapse-chart\" class=\"box-content accordion-body collapse in\">\n");
          out.write("                        <div class=\"paddner\">\n");
          out.write("                            <div id=\"chart_accum");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${singleGraph.nameForJS}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" class=\"accumulator-chart\"></div>\n");
          out.write("                        </div>\n");
          out.write("                    </div>\n");
          out.write("                </div>\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_ano_005fnotPresent_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fnotPresent_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fnotPresent_0026_005fname.reuse(_jspx_th_ano_005fnotPresent_005f1);
      _jspx_th_ano_005fnotPresent_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fnotPresent_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fnotPresent_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fiF_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fnotPresent_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:iF
    net.anotheria.tags.IfTag _jspx_th_ano_005fiF_005f0 = (net.anotheria.tags.IfTag) _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.get(net.anotheria.tags.IfTag.class);
    boolean _jspx_th_ano_005fiF_005f0_reused = false;
    try {
      _jspx_th_ano_005fiF_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fiF_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fnotPresent_005f1);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(94,28) name = test type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fiF_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:length(accNames) eq 1}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_ano_005fiF_005f0 = _jspx_th_ano_005fiF_005f0.doStartTag();
      if (_jspx_eval_ano_005fiF_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                                ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${accNames[0]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\n");
          out.write("                            ");
          int evalDoAfterBody = _jspx_th_ano_005fiF_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fiF_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.reuse(_jspx_th_ano_005fiF_005f0);
      _jspx_th_ano_005fiF_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiF_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fiF_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fiF_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fnotPresent_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:iF
    net.anotheria.tags.IfTag _jspx_th_ano_005fiF_005f1 = (net.anotheria.tags.IfTag) _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.get(net.anotheria.tags.IfTag.class);
    boolean _jspx_th_ano_005fiF_005f1_reused = false;
    try {
      _jspx_th_ano_005fiF_005f1.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fiF_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fnotPresent_005f1);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(97,28) name = test type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fiF_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:length(accNames) gt 1}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_ano_005fiF_005f1 = _jspx_th_ano_005fiF_005f1.doStartTag();
      if (_jspx_eval_ano_005fiF_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                                Combined charts\n");
          out.write("                            ");
          int evalDoAfterBody = _jspx_th_ano_005fiF_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fiF_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.reuse(_jspx_th_ano_005fiF_005f1);
      _jspx_th_ano_005fiF_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiF_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fiF_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fiF_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fnotPresent_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:iF
    net.anotheria.tags.IfTag _jspx_th_ano_005fiF_005f2 = (net.anotheria.tags.IfTag) _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.get(net.anotheria.tags.IfTag.class);
    boolean _jspx_th_ano_005fiF_005f2_reused = false;
    try {
      _jspx_th_ano_005fiF_005f2.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fiF_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fnotPresent_005f1);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(106,32) name = test type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fiF_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chart.dashboardsToAdd != ''}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_ano_005fiF_005f2 = _jspx_th_ano_005fiF_005f2.doStartTag();
      if (_jspx_eval_ano_005fiF_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                                    <li><a onclick=\"addChart('");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.accNamesConcat}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('\'');
          out.write(',');
          out.write('\'');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.dashboards}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("')\">Add to Dashboard</a></li>\n");
          out.write("                                ");
          int evalDoAfterBody = _jspx_th_ano_005fiF_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fiF_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.reuse(_jspx_th_ano_005fiF_005f2);
      _jspx_th_ano_005fiF_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiF_005f2, _jsp_getInstanceManager(), _jspx_th_ano_005fiF_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fiF_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f6, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:iF
    net.anotheria.tags.IfTag _jspx_th_ano_005fiF_005f3 = (net.anotheria.tags.IfTag) _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.get(net.anotheria.tags.IfTag.class);
    boolean _jspx_th_ano_005fiF_005f3_reused = false;
    try {
      _jspx_th_ano_005fiF_005f3.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fiF_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f6);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(140,40) name = test type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fiF_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chart.dashboardsToAdd != ''}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_ano_005fiF_005f3 = _jspx_th_ano_005fiF_005f3.doStartTag();
      if (_jspx_eval_ano_005fiF_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                                            <li><a onclick=\"addChart('");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${singleGraph.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('\'');
          out.write(',');
          out.write('\'');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.dashboards}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("')\">Add to Dashboard</a></li>\n");
          out.write("                                        ");
          int evalDoAfterBody = _jspx_th_ano_005fiF_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fiF_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.reuse(_jspx_th_ano_005fiF_005f3);
      _jspx_th_ano_005fiF_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiF_005f3, _jsp_getInstanceManager(), _jspx_th_ano_005fiF_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fpresent_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f8 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f8_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f8.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f0);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(198,35) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f8.setName("type");
      int _jspx_eval_ano_005fwrite_005f8 = _jspx_th_ano_005fwrite_005f8.doStartTag();
      if (_jspx_th_ano_005fwrite_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f8);
      _jspx_th_ano_005fwrite_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f8, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fpresent_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f9 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f9_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f9.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f0);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(224,31) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f9.setName("type");
      int _jspx_eval_ano_005fwrite_005f9 = _jspx_th_ano_005fwrite_005f9.doStartTag();
      if (_jspx_th_ano_005fwrite_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f9);
      _jspx_th_ano_005fwrite_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f9, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_mos_005fdeepLink_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f8, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  mos:deepLink
    net.anotheria.moskito.webui.shared.tags.DeepLinkTag _jspx_th_mos_005fdeepLink_005f0 = new net.anotheria.moskito.webui.shared.tags.DeepLinkTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_mos_005fdeepLink_005f0);
    try {
      _jspx_th_mos_005fdeepLink_005f0.setJspContext(_jspx_page_context);
      _jspx_th_mos_005fdeepLink_005f0.setParent(_jspx_th_ano_005fiterate_005f8);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(349,36) name = href type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_mos_005fdeepLink_005f0.setHref((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("?id_${accumulator.id}=set", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      _jspx_th_mos_005fdeepLink_005f0.setJspBody(new Helper( 0, _jspx_page_context, _jspx_th_mos_005fdeepLink_005f0, null));
      _jspx_th_mos_005fdeepLink_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_mos_005fdeepLink_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_mos_005fdeepLink_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f8, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  mos:deepLink
    net.anotheria.moskito.webui.shared.tags.DeepLinkTag _jspx_th_mos_005fdeepLink_005f1 = new net.anotheria.moskito.webui.shared.tags.DeepLinkTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_mos_005fdeepLink_005f1);
    try {
      _jspx_th_mos_005fdeepLink_005f1.setJspContext(_jspx_page_context);
      _jspx_th_mos_005fdeepLink_005f1.setParent(_jspx_th_ano_005fiterate_005f8);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(358,36) name = href type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_mos_005fdeepLink_005f1.setHref((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("?id_${accumulator.id}=set", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(358,36) null
      _jspx_th_mos_005fdeepLink_005f1.setDynamicAttribute(null, "class", "action-icon show-icon tooltip-bottom");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(358,36) null
      _jspx_th_mos_005fdeepLink_005f1.setDynamicAttribute(null, "title", "Show");
      _jspx_th_mos_005fdeepLink_005f1.setJspBody(new Helper( 1, _jspx_page_context, _jspx_th_mos_005fdeepLink_005f1, null));
      _jspx_th_mos_005fdeepLink_005f1.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_mos_005fdeepLink_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fequal_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:equal
    net.anotheria.tags.EqualTag _jspx_th_ano_005fequal_005f1 = (net.anotheria.tags.EqualTag) _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.get(net.anotheria.tags.EqualTag.class);
    boolean _jspx_th_ano_005fequal_005f1_reused = false;
    try {
      _jspx_th_ano_005fequal_005f1.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fequal_005f1.setParent(null);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(380,43) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f1.setName("combined_set");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(380,43) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f1.setValue("true");
      int _jspx_eval_ano_005fequal_005f1 = _jspx_th_ano_005fequal_005f1.doStartTag();
      if (_jspx_eval_ano_005fequal_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("checked=\"checked\"");
          int evalDoAfterBody = _jspx_th_ano_005fequal_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fequal_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.reuse(_jspx_th_ano_005fequal_005f1);
      _jspx_th_ano_005fequal_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fequal_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fequal_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fequal_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:equal
    net.anotheria.tags.EqualTag _jspx_th_ano_005fequal_005f2 = (net.anotheria.tags.EqualTag) _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.get(net.anotheria.tags.EqualTag.class);
    boolean _jspx_th_ano_005fequal_005f2_reused = false;
    try {
      _jspx_th_ano_005fequal_005f2.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fequal_005f2.setParent(null);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(387,43) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f2.setName("normalized_set");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(387,43) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f2.setValue("true");
      int _jspx_eval_ano_005fequal_005f2 = _jspx_th_ano_005fequal_005f2.doStartTag();
      if (_jspx_eval_ano_005fequal_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("checked=\"checked\"");
          int evalDoAfterBody = _jspx_th_ano_005fequal_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fequal_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.reuse(_jspx_th_ano_005fequal_005f2);
      _jspx_th_ano_005fequal_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fequal_005f2, _jsp_getInstanceManager(), _jspx_th_ano_005fequal_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fequal_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:equal
    net.anotheria.tags.EqualTag _jspx_th_ano_005fequal_005f3 = (net.anotheria.tags.EqualTag) _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.get(net.anotheria.tags.EqualTag.class);
    boolean _jspx_th_ano_005fequal_005f3_reused = false;
    try {
      _jspx_th_ano_005fequal_005f3.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fequal_005f3.setParent(null);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(394,43) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f3.setName("multiple_set");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(394,43) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f3.setValue("true");
      int _jspx_eval_ano_005fequal_005f3 = _jspx_th_ano_005fequal_005f3.doStartTag();
      if (_jspx_eval_ano_005fequal_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("checked=\"checked\"");
          int evalDoAfterBody = _jspx_th_ano_005fequal_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fequal_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.reuse(_jspx_th_ano_005fequal_005f3);
      _jspx_th_ano_005fequal_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fequal_005f3, _jsp_getInstanceManager(), _jspx_th_ano_005fequal_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fequal_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:equal
    net.anotheria.tags.EqualTag _jspx_th_ano_005fequal_005f4 = (net.anotheria.tags.EqualTag) _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.get(net.anotheria.tags.EqualTag.class);
    boolean _jspx_th_ano_005fequal_005f4_reused = false;
    try {
      _jspx_th_ano_005fequal_005f4.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fequal_005f4.setParent(null);
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(404,43) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f4.setName("withThresholds_set");
      // /net/anotheria/moskito/webui/accumulators/jsp/Accumulators.jsp(404,43) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f4.setValue("true");
      int _jspx_eval_ano_005fequal_005f4 = _jspx_th_ano_005fequal_005f4.doStartTag();
      if (_jspx_eval_ano_005fequal_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("checked=\"checked\"");
          int evalDoAfterBody = _jspx_th_ano_005fequal_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fequal_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.reuse(_jspx_th_ano_005fequal_005f4);
      _jspx_th_ano_005fequal_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fequal_005f4, _jsp_getInstanceManager(), _jspx_th_ano_005fequal_005f4_reused);
    }
    return false;
  }

  private class Helper
      extends org.apache.jasper.runtime.JspFragmentHelper
  {
    private javax.servlet.jsp.tagext.JspTag _jspx_parent;
    private int[] _jspx_push_body_count;

    public Helper( int discriminator, javax.servlet.jsp.JspContext jspContext, javax.servlet.jsp.tagext.JspTag _jspx_parent, int[] _jspx_push_body_count ) {
      super( discriminator, jspContext, _jspx_parent );
      this._jspx_parent = _jspx_parent;
      this._jspx_push_body_count = _jspx_push_body_count;
    }
    public boolean invoke0( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${accumulator.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      return false;
    }
    public boolean invoke1( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("<i class=\"fa fa-search-plus\"></i>");
      return false;
    }
    public void invoke( java.io.Writer writer )
      throws javax.servlet.jsp.JspException
    {
      javax.servlet.jsp.JspWriter out = null;
      if( writer != null ) {
        out = this.jspContext.pushBody(writer);
      } else {
        out = this.jspContext.getOut();
      }
      try {
        Object _jspx_saved_JspContext = this.jspContext.getELContext().getContext(javax.servlet.jsp.JspContext.class);
        this.jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,this.jspContext);
        switch( this.discriminator ) {
          case 0:
            invoke0( out );
            break;
          case 1:
            invoke1( out );
            break;
        }
        jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,_jspx_saved_JspContext);
      }
      catch( java.lang.Throwable e ) {
        if (e instanceof javax.servlet.jsp.SkipPageException)
            throw (javax.servlet.jsp.SkipPageException) e;
        throw new javax.servlet.jsp.JspException( e );
      }
      finally {
        if( writer != null ) {
          this.jspContext.popBody();
        }
      }
    }
  }
}
