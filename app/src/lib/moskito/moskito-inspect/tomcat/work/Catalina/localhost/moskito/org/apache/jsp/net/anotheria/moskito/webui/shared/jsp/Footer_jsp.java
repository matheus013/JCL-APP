/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.16
 * Generated at: 2018-07-10 13:36:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.net.anotheria.moskito.webui.shared.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Footer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/ano-tags-2.1.1.jar", Long.valueOf(1475585378000L));
    _jspx_dependants.put("jar:file:/home/matheus/JCL-APP/app/src/lib/moskito/moskito-inspect/tomcat/webapps/moskito/WEB-INF/lib/ano-tags-2.1.1.jar!/META-INF/ano-tags.tld", Long.valueOf(1475585374000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.release();
    _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.release();
    _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.release();
    _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<footer id=\"footer\" class=\"navbar-default\">\n");
      out.write("    <div class=\"row\">\n");
      out.write("        <div class=\"col-md-4\">\n");
      out.write("            <div class=\"footer-info\">\n");
      out.write("                Developed by MoSKito team @ <a href=\"http://www.anotheria.net\" target=\"_blank\">anotheria</a>\n");
      out.write("                <br>Email: <a href=\"mailto:support@moskito.org\">support@moskito.org</a>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-md-4\">\n");
      out.write("            ");
      if (_jspx_meth_ano_005fequal_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("        </div>\n");
      out.write("        ");
      if (_jspx_meth_ano_005fiF_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    </div>\n");
      out.write("</footer>\n");
      out.write("<!-- Modal -->\n");
      out.write("<div class=\"modal fade\" id=\"contactUs\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n");
      out.write("    <div class=\"modal-dialog\" role=\"document\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n");
      out.write("                <h4 class=\"modal-title\" id=\"myModalLabel\">Ask Question?</h4>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-body\">\n");
      out.write("                <form id=\"feedbackForm\" data-toggle=\"validator\" method=\"post\" role=\"form\">\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"col-sm-12\">\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                <label for=\"typeRequest\">Type of request</label>\n");
      out.write("                                <select class=\"form-control\" name=\"typeRequest\" id=\"typeRequest\">\n");
      out.write("                                    <option value=\"Feedback\">Feedback</option>\n");
      out.write("                                    <option value=\"Support\">Support</option>\n");
      out.write("                                    <option value=\"Customization\">Customization</option>\n");
      out.write("                                    <option value=\"Other\">Other</option>\n");
      out.write("                                </select>\n");
      out.write("                                <div class=\"help-block with-errors\"></div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-sm-6\">\n");
      out.write("                            <div class=\"form-group error\">\n");
      out.write("                                <label for=\"fName\">First Name<span class=\"required-item\">*</span></label>\n");
      out.write("                                <input type=\"text\" id=\"fName\" name=\"fName\" placeholder=\"First Name\" class=\"form-control\" data-error=\"Please, enter your First Name\" required>\n");
      out.write("                                <div class=\"help-block with-errors\"></div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-sm-6\">\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                <label for=\"lName\">Last Name<span class=\"required-item\">*</span></label>\n");
      out.write("                                <input type=\"text\" id=\"lName\" name=\"lName\" placeholder=\"Last Name\" class=\"form-control\" data-error=\"Please, enter your Last Name\" required>\n");
      out.write("                                <div class=\"help-block with-errors\"></div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-sm-12\">\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                <label for=\"cEmail\">Email<span class=\"required-item\">*</span></label>\n");
      out.write("                                <input type=\"email\" id=\"cEmail\" name=\"cEmail\" placeholder=\"Email address\" class=\"form-control\" data-error=\"Sorry, that email address is invalid\" required>\n");
      out.write("                                <div class=\"help-block with-errors\"></div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-sm-12\">\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                <label for=\"cCompany\">Company</label>\n");
      out.write("                                <input type=\"text\" id=\"cCompany\" name=\"cCompany\" placeholder=\"Company name\" class=\"form-control\">\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-sm-12\">\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                <label for=\"Note\">Note<span class=\"required-item\">*</span></label>\n");
      out.write("                                <textarea id=\"Note\" name=\"Note\" placeholder=\"Write you question here\" class=\"form-control\" required></textarea>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"modal-actions\">\n");
      out.write("                        <div class=\"pull-right\">\n");
      out.write("                            <button type=\"button\" class=\"btn btn-default btn-lg\" data-dismiss=\"modal\">Close</button>\n");
      out.write("                            <button type=\"submit\" class=\"btn btn-primary btn-lg\">Send</button>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("\n");
      out.write("                <div class=\"submit-message\" style=\"display:none;\">\n");
      out.write("                    <p><strong>Thank you.</strong> Your message has been sent.</p>\n");
      out.write("                    <div class=\"modal-actions\">\n");
      out.write("                        <button type=\"button\" class=\"btn btn-default pull-right\" data-dismiss=\"modal\">Close</button>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- Modal -->\n");
      out.write("<div class=\"modal fade\" id=\"Version\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n");
      out.write("    <div class=\"modal-dialog\" role=\"document\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n");
      out.write("                <h4 class=\"modal-title\">MoSKito Version</h4>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-body\">\n");
      out.write("                <dl class=\"dl-horizontal\">\n");
      out.write("                    <dt>App version:</dt>\n");
      out.write("                    <dd>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${application_maven_version}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</dd>\n");
      out.write("                    <dt>MoSKito version</dt>\n");
      out.write("                    <dd>v ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${moskito_version_string}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</dd>\n");
      out.write("                    <dt>Server:</dt>\n");
      out.write("                    <dd>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${servername}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</dd>\n");
      out.write("                    <dt>Connection:</dt>\n");
      out.write("                    <dd>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${connection}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</dd>\n");
      out.write("                </dl>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- Modal -->\n");
      out.write("<div class=\"modal fade\" id=\"About\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n");
      out.write("    <div class=\"modal-dialog\" role=\"document\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n");
      out.write("                <h4 class=\"modal-title\">What is MoSkito?</h4>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-body\">\n");
      out.write("                <div class=\"modal-logo\">\n");
      out.write("                    <img src=\"../moskito/int/img/logo_blue.png\">\n");
      out.write("                    <span class=\"logo-text\">MoSKito Inspect</span>\n");
      out.write("                    <span class=\"logo-version\">v ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${moskito_version_string}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\n");
      out.write("                </div>\n");
      out.write("                <h4>Don't wait for your customers to tell you that your site is down!</h4>\n");
      out.write("                <p>MoSKito Monitoring for Java applications. Complete ecosystem for DevOps. Free & open source.</p>\n");
      out.write("                <p>\n");
      out.write("                    MoSKito is an open source system for monitoring Java web applications.\n");
      out.write("                </p>\n");
      out.write("                <p>\n");
      out.write("                    <strong>With MoSKito, you can:</strong>\n");
      out.write("                </p>\n");
      out.write("                <ul>\n");
      out.write("                    <li>\n");
      out.write("                        collect, store and analyse any type of performance data (MoSKito-Essential),\n");
      out.write("                    </li>\n");
      out.write("                    <li>\n");
      out.write("                        create personalised storage for the collected data (MoSKito-Central),\n");
      out.write("                    </li>\n");
      out.write("                    </li>\n");
      out.write("                    <li>\n");
      out.write("                        effectively monitor multi-node applications (MoSKito-Control).\n");
      out.write("                    </li>\n");
      out.write("                </ul>\n");
      out.write("                <p>\n");
      out.write("                    In fact, MoSKito is a complete system kit for DevOps (as well as classical Devs and Ops) who care about performance of their web apps and microservices.\n");
      out.write("                </p>\n");
      out.write("                <p>\n");
      out.write("                    <strong>Enjoy!</strong>\n");
      out.write("                    <br/>\n");
      out.write("                    <strong><a href=\"http://moskito.org\" target=\"_blank\">Moskito Team</a></strong>\n");
      out.write("                </p>\n");
      out.write("                <div class=\"modal-actions\">\n");
      out.write("                    <div class=\"pull-right\">\n");
      out.write("                        <button class=\"btn btn-default btn-lg\" data-dismiss=\"modal\">Close</button>\n");
      out.write("                        <button class=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#contactUs\" data-dismiss=\"modal\">Ask Question?</button>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- Modal -->\n");
      out.write("<div class=\"modal fade\" id=\"Contacts\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n");
      out.write("    <div class=\"modal-dialog\" role=\"document\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n");
      out.write("                <h4 class=\"modal-title\">Contacts</h4>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-body\">\n");
      out.write("                <dl class=\"dl-horizontal\">\n");
      out.write("                    <dt>Email:</dt>\n");
      out.write("                    <dd><a href=\"mailto:support@moskito.org\">support@moskito.org</a></dd>\n");
      out.write("                    <dt>Phone:</dt>\n");
      out.write("                    <dd><a href=\"skype:+49(0)4035716835\">+49 (0) 40 357 168 35</a></dd>\n");
      out.write("                    <dt>Website:</dt>\n");
      out.write("                    <dd><a href=\"http://moskito.org\" target=\"_blank\">moskito.org</a></dd>\n");
      out.write("                </dl>\n");
      out.write("                <div class=\"modal-actions\">\n");
      out.write("                    <div class=\"pull-right\">\n");
      out.write("                        <button class=\"btn btn-default btn-lg\" data-dismiss=\"modal\">Close</button>\n");
      out.write("                        <button class=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#contactUs\" data-dismiss=\"modal\">Ask Question?</button>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script src=\"../moskito/ext/bootstrap-3.1.1/js/bootstrap.min.js\" type=\"text/javascript\"></script>\n");
      out.write("<script src=\"../moskito/ext/tablesorter/jquery.metadata.js\" type=\"text/javascript\"></script>\n");
      out.write("<script src=\"../moskito/ext/tablesorter/jquery.tablesorter.js\" type=\"text/javascript\"></script>\n");
      out.write("<script src=\"../moskito/ext/select2-3.4.6/select2.js\" type=\"text/javascript\"></script>\n");
      out.write("\n");
      out.write("<script src=\"../moskito/ext/switchery/switchery.min.js\" type=\"text/javascript\"></script>\n");
      out.write("\n");
      out.write("<!-- Debug\n");
      out.write(" CurrentNaviItem: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentNaviItem}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(',');
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentNaviItem.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n");
      out.write(" CurrentSubNaviItem: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentSubNaviItem}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(',');
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${currentSubNaviItem.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n");
      out.write("-->\n");
      out.write("\n");
      if (_jspx_meth_ano_005fequal_005f1(_jspx_page_context))
        return;
      out.write('\n');
      if (_jspx_meth_ano_005fequal_005f2(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_ano_005fequal_005f3(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_ano_005fequal_005f4(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_ano_005fequal_005f5(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("<script src=\"../moskito/ext/custom-scrollbar/jquery.mCustomScrollbar.concat.min.js\"></script>\n");
      out.write("<script src=\"../moskito/ext/jquery-serialize-object/jquery.serialize-object.min.js\" type=\"text/javascript\"></script>\n");
      out.write("<script src=\"../moskito/ext/bootstrap-validator/validator.min.js\" type=\"text/javascript\"></script>\n");
      out.write("<script src=\"../moskito/int/js/common.js\" type=\"text/javascript\"></script>\n");
      out.write("\n");
      if (_jspx_meth_ano_005fequal_005f6(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"modal fade\" id=\"addElementToDashboard\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" style=\"display: none;\">\n");
      out.write("    <div class=\"modal-dialog modal-sm\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n");
      out.write("                <h4 class=\"modal-title\">Add <span id=\"selectedElement\">someElement</span> to dashboards</h4>\n");
      out.write("            </div>\n");
      out.write("            <form id=\"addElementToDashboardAction\" action=\"someAction\" method=\"GET\">\n");
      out.write("                <div class=\"modal-body\">\n");
      out.write("                    <input id=\"selectedElementName\" type=\"hidden\" class=\"form-control\" name=\"pName\" value=\"test\">\n");
      out.write("                    <div id=\"dashboardsToSelect\">\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"modal-footer text-center\">\n");
      out.write("                    <button type=\"button\" class=\"btn btn-success\" onclick=\"submit();\">Add</button>\n");
      out.write("                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\n");
      out.write("                </div>\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"modal fade modal-danger\" id=\"removeElementFromDashboard\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" style=\"display: none;\">\n");
      out.write("    <div class=\"modal-dialog\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\n");
      out.write("                <h4 class=\"modal-title\" id=\"removeElementFromDashboardTitle\">test</h4>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"modal-body\">\n");
      out.write("                <form id=\"removeElementFromDashboardAction\" action=\"someAction\" method=\"GET\">\n");
      out.write("                    <input type=\"hidden\" class=\"form-control\" name=\"pName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.selectedDashboard}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("                    <input type=\"hidden\" class=\"form-control\" name=\"pElement\" value=\"test\" id=\"removeElement\">\n");
      out.write("                    <div class=\"form-group text-right\">\n");
      out.write("                        <button class=\"btn btn-danger\" type=\"button\" onclick=\"submit();\">Yes</button>\n");
      out.write("                        <button class=\"btn btn-default\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_ano_005fpresent_005f0(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_ano_005fpresent_005f1(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_ano_005fpresent_005f2(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');
      if (_jspx_meth_ano_005fpresent_005f3(_jspx_page_context))
        return;
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_ano_005fequal_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:equal
    net.anotheria.tags.EqualTag _jspx_th_ano_005fequal_005f0 = (net.anotheria.tags.EqualTag) _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.get(net.anotheria.tags.EqualTag.class);
    boolean _jspx_th_ano_005fequal_005f0_reused = false;
    try {
      _jspx_th_ano_005fequal_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fequal_005f0.setParent(null);
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(13,12) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f0.setName("config");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(13,12) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f0.setProperty("trackUsage");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(13,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f0.setValue("true");
      int _jspx_eval_ano_005fequal_005f0 = _jspx_th_ano_005fequal_005f0.doStartTag();
      if (_jspx_eval_ano_005fequal_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<img src=\"//counter.moskito.org/counter/inspect/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${applicationScope.moskito_version_string}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('/');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pagename}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" class=\"ipix\"> ");
          int evalDoAfterBody = _jspx_th_ano_005fequal_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fequal_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.reuse(_jspx_th_ano_005fequal_005f0);
      _jspx_th_ano_005fequal_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fequal_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fequal_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fiF_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:iF
    net.anotheria.tags.IfTag _jspx_th_ano_005fiF_005f0 = (net.anotheria.tags.IfTag) _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.get(net.anotheria.tags.IfTag.class);
    boolean _jspx_th_ano_005fiF_005f0_reused = false;
    try {
      _jspx_th_ano_005fiF_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fiF_005f0.setParent(null);
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(15,8) name = test type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fiF_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${displayIphoneIcons}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_ano_005fiF_005f0 = _jspx_th_ano_005fiF_005f0.doStartTag();
      if (_jspx_eval_ano_005fiF_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("            <div class=\"col-md-4\">\n");
          out.write("                <a href=\"https://itunes.apple.com/us/app/moskito-ui/id531387262?mt=8\" class=\"iphone-banner\"><img src=\"../moskito/int/img/iphone_banner.png\" alt=\"Download MoSKito iOS App\"></a>\n");
          out.write("            </div>\n");
          out.write("        ");
          int evalDoAfterBody = _jspx_th_ano_005fiF_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fiF_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.reuse(_jspx_th_ano_005fiF_005f0);
      _jspx_th_ano_005fiF_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiF_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fiF_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fequal_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:equal
    net.anotheria.tags.EqualTag _jspx_th_ano_005fequal_005f1 = (net.anotheria.tags.EqualTag) _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.get(net.anotheria.tags.EqualTag.class);
    boolean _jspx_th_ano_005fequal_005f1_reused = false;
    try {
      _jspx_th_ano_005fequal_005f1.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fequal_005f1.setParent(null);
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(216,0) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f1.setName("currentSubNaviItem");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(216,0) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f1.setProperty("id");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(216,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f1.setValue("more_config");
      int _jspx_eval_ano_005fequal_005f1 = _jspx_th_ano_005fequal_005f1.doStartTag();
      if (_jspx_eval_ano_005fequal_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("    <script type=\"text/javascript\" src=\"../moskito/ext/google-code-prettify/prettify.js\"></script>\n");
          out.write("    <script type=\"text/javascript\" src=\"../moskito/ext/google-code-prettify/application.js\"></script>\n");
          int evalDoAfterBody = _jspx_th_ano_005fequal_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fequal_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.reuse(_jspx_th_ano_005fequal_005f1);
      _jspx_th_ano_005fequal_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fequal_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fequal_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fequal_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:equal
    net.anotheria.tags.EqualTag _jspx_th_ano_005fequal_005f2 = (net.anotheria.tags.EqualTag) _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.get(net.anotheria.tags.EqualTag.class);
    boolean _jspx_th_ano_005fequal_005f2_reused = false;
    try {
      _jspx_th_ano_005fequal_005f2.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fequal_005f2.setParent(null);
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(220,0) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f2.setName("currentSubNaviItem");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(220,0) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f2.setProperty("id");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(220,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f2.setValue("more_mbeans");
      int _jspx_eval_ano_005fequal_005f2 = _jspx_th_ano_005fequal_005f2.doStartTag();
      if (_jspx_eval_ano_005fequal_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("    <script type=\"text/javascript\" src=\"../moskito/ext/jquery-tree-table/jquery.treeTable.min.js\"></script>\n");
          int evalDoAfterBody = _jspx_th_ano_005fequal_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fequal_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.reuse(_jspx_th_ano_005fequal_005f2);
      _jspx_th_ano_005fequal_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fequal_005f2, _jsp_getInstanceManager(), _jspx_th_ano_005fequal_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fequal_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:equal
    net.anotheria.tags.EqualTag _jspx_th_ano_005fequal_005f3 = (net.anotheria.tags.EqualTag) _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.get(net.anotheria.tags.EqualTag.class);
    boolean _jspx_th_ano_005fequal_005f3_reused = false;
    try {
      _jspx_th_ano_005fequal_005f3.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fequal_005f3.setParent(null);
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(224,0) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f3.setName("currentNaviItem");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(224,0) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f3.setProperty("id");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(224,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f3.setValue("tracers");
      int _jspx_eval_ano_005fequal_005f3 = _jspx_th_ano_005fequal_005f3.doStartTag();
      if (_jspx_eval_ano_005fequal_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("    <script type=\"text/javascript\" src=\"../moskito/ext/jquery-tree-table/jquery.treeTable.min.js\"></script>\n");
          int evalDoAfterBody = _jspx_th_ano_005fequal_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fequal_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.reuse(_jspx_th_ano_005fequal_005f3);
      _jspx_th_ano_005fequal_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fequal_005f3, _jsp_getInstanceManager(), _jspx_th_ano_005fequal_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fequal_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:equal
    net.anotheria.tags.EqualTag _jspx_th_ano_005fequal_005f4 = (net.anotheria.tags.EqualTag) _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.get(net.anotheria.tags.EqualTag.class);
    boolean _jspx_th_ano_005fequal_005f4_reused = false;
    try {
      _jspx_th_ano_005fequal_005f4.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fequal_005f4.setParent(null);
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(228,0) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f4.setName("currentNaviItem");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(228,0) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f4.setProperty("id");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(228,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f4.setValue("journeys");
      int _jspx_eval_ano_005fequal_005f4 = _jspx_th_ano_005fequal_005f4.doStartTag();
      if (_jspx_eval_ano_005fequal_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("    ");
          if (_jspx_meth_ano_005fnotEqual_005f0(_jspx_th_ano_005fequal_005f4, _jspx_page_context))
            return true;
          out.write('\n');
          int evalDoAfterBody = _jspx_th_ano_005fequal_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fequal_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.reuse(_jspx_th_ano_005fequal_005f4);
      _jspx_th_ano_005fequal_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fequal_005f4, _jsp_getInstanceManager(), _jspx_th_ano_005fequal_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fnotEqual_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fequal_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:notEqual
    net.anotheria.tags.NotEqualTag _jspx_th_ano_005fnotEqual_005f0 = (net.anotheria.tags.NotEqualTag) _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.get(net.anotheria.tags.NotEqualTag.class);
    boolean _jspx_th_ano_005fnotEqual_005f0_reused = false;
    try {
      _jspx_th_ano_005fnotEqual_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fnotEqual_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fequal_005f4);
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(229,4) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f0.setName("pagename");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(229,4) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f0.setValue("journey_analyze");
      int _jspx_eval_ano_005fnotEqual_005f0 = _jspx_th_ano_005fnotEqual_005f0.doStartTag();
      if (_jspx_eval_ano_005fnotEqual_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("        <script type=\"text/javascript\" src=\"../moskito/ext/jquery-tree-table/jquery.treeTable.min.js\"></script>\n");
          out.write("    ");
          int evalDoAfterBody = _jspx_th_ano_005fnotEqual_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fnotEqual_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.reuse(_jspx_th_ano_005fnotEqual_005f0);
      _jspx_th_ano_005fnotEqual_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fnotEqual_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fnotEqual_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fequal_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:equal
    net.anotheria.tags.EqualTag _jspx_th_ano_005fequal_005f5 = (net.anotheria.tags.EqualTag) _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.get(net.anotheria.tags.EqualTag.class);
    boolean _jspx_th_ano_005fequal_005f5_reused = false;
    try {
      _jspx_th_ano_005fequal_005f5.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fequal_005f5.setParent(null);
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(240,0) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f5.setName("currentNaviItem");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(240,0) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f5.setProperty("id");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(240,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f5.setValue("errors");
      int _jspx_eval_ano_005fequal_005f5 = _jspx_th_ano_005fequal_005f5.doStartTag();
      if (_jspx_eval_ano_005fequal_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("    <script type=\"text/javascript\" src=\"../moskito/ext/jquery-tree-table/jquery.treeTable.min.js\"></script>\n");
          int evalDoAfterBody = _jspx_th_ano_005fequal_005f5.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fequal_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.reuse(_jspx_th_ano_005fequal_005f5);
      _jspx_th_ano_005fequal_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fequal_005f5, _jsp_getInstanceManager(), _jspx_th_ano_005fequal_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fequal_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:equal
    net.anotheria.tags.EqualTag _jspx_th_ano_005fequal_005f6 = (net.anotheria.tags.EqualTag) _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.get(net.anotheria.tags.EqualTag.class);
    boolean _jspx_th_ano_005fequal_005f6_reused = false;
    try {
      _jspx_th_ano_005fequal_005f6.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fequal_005f6.setParent(null);
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(249,0) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f6.setName("config");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(249,0) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f6.setProperty("showOnlineHelp");
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(249,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f6.setValue("true");
      int _jspx_eval_ano_005fequal_005f6 = _jspx_th_ano_005fequal_005f6.doStartTag();
      if (_jspx_eval_ano_005fequal_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("<!-- Begin OLARK -->\n");
          out.write("<div id=\"olark-box-wrapper\">\n");
          out.write("\n");
          out.write("    <!-- Olark click-to-chat tab -->\n");
          out.write("    <div class=\"side-chat-container\">\n");
          out.write("        <a id=\"side-chat\" href=\"javascript:void(0);\" onclick=\"changeClass()\">\n");
          out.write("            <i class=\"fa fa-comment\"></i> Helpdesk\n");
          out.write("        </a>\n");
          out.write("    </div>\n");
          out.write("\n");
          out.write("    <!-- Empty container for Olark chat box  -->\n");
          out.write("    <div id=\"olark-box-container\"></div>\n");
          out.write("\n");
          out.write("</div>\n");
          out.write("\n");
          out.write("<!-- begin olark code -->\n");
          out.write("<script data-cfasync=\"false\" type='text/javascript'>/*<![CDATA[*/window.olark||(function(c){var f=window,d=document,l=f.location.protocol==\"https:\"?\"https:\":\"http:\",z=c.name,r=\"load\";var nt=function(){\n");
          out.write("    f[z]=function(){\n");
          out.write("        (a.s=a.s||[]).push(arguments)};var a=f[z]._={\n");
          out.write("    },q=c.methods.length;while(q--){(function(n){f[z][n]=function(){\n");
          out.write("        f[z](\"call\",n,arguments)}})(c.methods[q])}a.l=c.loader;a.i=nt;a.p={\n");
          out.write("        0:+new Date};a.P=function(u){\n");
          out.write("        a.p[u]=new Date-a.p[0]};function s(){\n");
          out.write("        a.P(r);f[z](r)}f.addEventListener?f.addEventListener(r,s,false):f.attachEvent(\"on\"+r,s);var ld=function(){function p(hd){\n");
          out.write("        hd=\"head\";return[\"<\",hd,\"></\",hd,\"><\",i,' onl' + 'oad=\"var d=',g,\";d.getElementsByTagName('head')[0].\",j,\"(d.\",h,\"('script')).\",k,\"='\",l,\"//\",a.l,\"'\",'\"',\"></\",i,\">\"].join(\"\")}var i=\"body\",m=d[i];if(!m){\n");
          out.write("        return setTimeout(ld,100)}a.P(1);var j=\"appendChild\",h=\"createElement\",k=\"src\",n=d[h](\"div\"),v=n[j](d[h](z)),b=d[h](\"iframe\"),g=\"document\",e=\"domain\",o;n.style.display=\"none\";m.insertBefore(n,m.firstChild).id=z;b.frameBorder=\"0\";b.id=z+\"-loader\";if(/MSIE[ ]+6/.test(navigator.userAgent)){\n");
          out.write("        b.src=\"javascript:false\"}b.allowTransparency=\"true\";v[j](b);try{\n");
          out.write("        b.contentWindow[g].open()}catch(w){\n");
          out.write("        c[e]=d[e];o=\"javascript:var d=\"+g+\".open();d.domain='\"+d.domain+\"';\";b[k]=o+\"void(0);\"}try{\n");
          out.write("        var t=b.contentWindow[g];t.write(p());t.close()}catch(x){\n");
          out.write("        b[k]=o+'d.write(\"'+p().replace(/\"/g,String.fromCharCode(92)+'\"')+'\");d.close();'}a.P(2)};ld()};nt()})({\n");
          out.write("    loader: \"static.olark.com/jsclient/loader0.js\",name:\"olark\",methods:[\"configure\",\"extend\",\"declare\",\"identify\"]});\n");
          out.write("/* custom configuration goes here (www.olark.com/documentation) */\n");
          out.write("olark.configure('box.inline', true);\n");
          out.write("olark('api.box.expand');\n");
          out.write("olark.identify('7961-404-10-9387');/*]]>*/</script><noscript><a href=\"https://www.olark.com/site/7961-404-10-9387/contact\" title=\"Contact us\" target=\"_blank\">Questions? Feedback?</a> powered by <a href=\"http://www.olark.com?welcome\" title=\"Olark live chat software\">Olark live chat software</a></noscript>\n");
          out.write("<!-- end olark code -->\n");
          out.write("\n");
          out.write("<script type='text/javascript'>\n");
          out.write("    var changeClass;\n");
          out.write("\n");
          out.write("    (function (d, olk) {\n");
          out.write("        // These functions are helpers for the below\n");
          out.write("        function getOlarkWrapper() {\n");
          out.write("            return d.getElementById(\"olark-box-wrapper\");\n");
          out.write("        }\n");
          out.write("\n");
          out.write("        function setOlarkVisible(olark_wrapper) {\n");
          out.write("            olark_wrapper.className = \"chatbox-open\";\n");
          out.write("        }\n");
          out.write("\n");
          out.write("        function setOlarkHidden(olark_wrapper) {\n");
          out.write("            olark_wrapper.className = \"chatbox-closed\";\n");
          out.write("        }\n");
          out.write("\n");
          out.write("        function olarkIsVisible(olark_wrapper) {\n");
          out.write("            return olark_wrapper.className.match(/(?:^|\\s)chatbox-open(?!\\S)/);\n");
          out.write("        }\n");
          out.write("\n");
          out.write("        // This is used by the link to show/hide the inline page element\n");
          out.write("        changeClass = function() {\n");
          out.write("            var olark_wrapper = getOlarkWrapper();\n");
          out.write("            // Get the HTML object containing the Olark chat box\n");
          out.write("            // If the chat box is already open, close id\n");
          out.write("            if (olarkIsVisible(olark_wrapper)) {\n");
          out.write("                setOlarkHidden(olark_wrapper);\n");
          out.write("            } else {\n");
          out.write("                setOlarkVisible(olark_wrapper);\n");
          out.write("            }\n");
          out.write("        }\n");
          out.write("\n");
          out.write("        // This is used to cause the box to auto-open if a visitor is already in conversation\n");
          out.write("        olk('api.visitor.getDetails', function (details) {\n");
          out.write("            if (details.isConversing) {\n");
          out.write("                setOlarkVisible(getOlarkWrapper());\n");
          out.write("            }\n");
          out.write("        });\n");
          out.write("    }(document, olark));\n");
          out.write("</script>\n");
          out.write("<!-- END OLARK -->\n");
          int evalDoAfterBody = _jspx_th_ano_005fequal_005f6.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fequal_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fproperty_005fname.reuse(_jspx_th_ano_005fequal_005f6);
      _jspx_th_ano_005fequal_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fequal_005f6, _jsp_getInstanceManager(), _jspx_th_ano_005fequal_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fpresent_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:present
    net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f0 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
    boolean _jspx_th_ano_005fpresent_005f0_reused = false;
    try {
      _jspx_th_ano_005fpresent_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fpresent_005f0.setParent(null);
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(380,0) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fpresent_005f0.setName("gauges");
      int _jspx_eval_ano_005fpresent_005f0 = _jspx_th_ano_005fpresent_005f0.doStartTag();
      if (_jspx_eval_ano_005fpresent_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("    <script language=\"JavaScript\">\n");
          out.write("        function removeGauge(gaugeForRemovalCaption, gaugeForRemovalName, dashboard){\n");
          out.write("            $(\"#removeElementFromDashboardTitle\").html(\"Remove gauge \\\"\" + gaugeForRemovalCaption + \"\\\" from dashboard \\\"\"+dashboard+\"\\\"?\");\n");
          out.write("            $(\"#removeElementFromDashboardAction\").attr(\"action\", \"mskDashboardRemoveGauge\");\n");
          out.write("            $(\"#removeElement\").attr(\"value\", gaugeForRemovalName);\n");
          out.write("            $(\"#removeElementFromDashboard\").modal('show');\n");
          out.write("        }\n");
          out.write("\n");
          out.write("        function addGauge(gaugeCaption, gaugeName, dashboardsToAdd){\n");
          out.write("\n");
          out.write("            $(\"#selectedElement\").html(\"gauge \\\"\" + gaugeCaption + \"\\\"\");\n");
          out.write("            $(\"#selectedElementName\").attr(\"value\", gaugeName);\n");
          out.write("            $(\"#addElementToDashboardAction\").attr(\"action\", \"mskAddGaugeToDashboard\");\n");
          out.write("\n");
          out.write("            var dashboards = dashboardsToAdd.split(',');\n");
          out.write("\n");
          out.write("            var textToAdd = \"\";\n");
          out.write("            var checked = dashboards.length == 1 ? \"checked\" : \"\";\n");
          out.write("            for (var i = 0; i < dashboards.length; i++) {\n");
          out.write("                textToAdd +=\n");
          out.write("                        \"<div class=\\\"checkbox\\\"> \" +\n");
          out.write("                        \"<label>\" +\n");
          out.write("                        \"<input type=\\\"checkbox\\\" \" + checked + \" name=\\\"pDashboards\\\" value=\\\"\"+dashboards[i]+\"\\\">\" + dashboards[i] +\n");
          out.write("                        \"</label>\" +\n");
          out.write("                        \"</div>\";\n");
          out.write("\n");
          out.write("            }\n");
          out.write("            $(\"#dashboardsToSelect\").html(textToAdd);\n");
          out.write("\n");
          out.write("            if (dashboards.length == 1) {\n");
          out.write("                $(\"#addElementToDashboardAction\").submit();\n");
          out.write("            } else {\n");
          out.write("                $(\"#addElementToDashboard\").modal('show');\n");
          out.write("            }\n");
          out.write("        }\n");
          out.write("\n");
          out.write("        function saveGaugesSvgAsPng(event, from, to) {\n");
          out.write("\n");
          out.write("            event.preventDefault();\n");
          out.write("            event.stopPropagation();\n");
          out.write("\n");
          out.write("//                 var xValBegin= 100, xStep = 200;\n");
          out.write("            var guageWidth = 144,\n");
          out.write("                    guageHeight = 144,\n");
          out.write("                    marginLeft = 50,\n");
          out.write("                    marginRight = 50,\n");
          out.write("                    marginTop = 50,\n");
          out.write("                    marginBottom = 50,\n");
          out.write("                    indent=20;\n");
          out.write("\n");
          out.write("            var allSvgsCode = '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"gauge1\" width=\"800\" height=\"244\" style=\"background-color: #FFFFFF;\">';\n");
          out.write("\n");
          out.write("\n");
          out.write("            var svgs = document.getElementsByClassName(\"gauge\");\n");
          out.write("\n");
          out.write("            to = to < svgs.length ? to : svgs.length - 1;\n");
          out.write("            var gaugeCount = to - from + 1;\n");
          out.write("            for(var i = from; i <= to;i++) {\n");
          out.write("                var svgOrigin =svgs[i];\n");
          out.write("\n");
          out.write("                //copy svg chart\n");
          out.write("                var svg = svgOrigin.cloneNode(true);\n");
          out.write("\n");
          out.write("                svg.setAttribute(\"x\", marginLeft + (i-from)*(guageWidth+indent));\n");
          out.write("                svg.setAttribute(\"y\", marginTop);\n");
          out.write("                svg.setAttribute(\"style\", \"background-color: #FFFFFF;\");\n");
          out.write("\n");
          out.write("                var css = '.axis path,' +\n");
          out.write("                        '.axis line {' +\n");
          out.write("                        'fill: none;' +\n");
          out.write("                        'stroke: #000;' +\n");
          out.write("                        'shape-rendering: crispEdges;' +\n");
          out.write("                        '}' +\n");
          out.write("                        '.legend, .tick {' +\n");
          out.write("                        'font: 12px sans-serif;' +\n");
          out.write("                        '}' +\n");
          out.write("                        'text {' +\n");
          out.write("                        'font: 12px sans-serif;' +\n");
          out.write("                        '}' +\n");
          out.write("                        '.line {' +\n");
          out.write("                        'fill: none;' +\n");
          out.write("                        'stroke: steelblue;' +\n");
          out.write("                        'stroke-width: 1.5px;' +\n");
          out.write("                        '}' +\n");
          out.write("                        '.line.hover {' +\n");
          out.write("                        'fill: none;' +\n");
          out.write("                        'stroke: steelblue;' +\n");
          out.write("                        'stroke-width: 3.0px;' +\n");
          out.write("                        '}' +\n");
          out.write("\n");
          out.write("                        '.grid .tick {' +\n");
          out.write("                        'stroke: lightgrey;' +\n");
          out.write("                        'opacity: 0.7;' +\n");
          out.write("                        '}' +\n");
          out.write("                        '.grid path {' +\n");
          out.write("                        'stroke-width: 0;' +\n");
          out.write("                        '}';\n");
          out.write("\n");
          out.write("                var style = document.createElement('style');\n");
          out.write("                style.type = 'text/css';\n");
          out.write("                if (style.styleSheet){\n");
          out.write("                    style.styleSheet.cssText = css;\n");
          out.write("                } else {\n");
          out.write("                    style.appendChild(document.createTextNode(css));\n");
          out.write("                }\n");
          out.write("\n");
          out.write("                svg.appendChild(style);\n");
          out.write("\n");
          out.write("                allSvgsCode+= new XMLSerializer().serializeToString(svg);\n");
          out.write("            }\n");
          out.write("            allSvgsCode+='</svg>';\n");
          out.write("\n");
          out.write("            var svgData = allSvgsCode;\n");
          out.write("            var canvas = document.createElement(\"canvas\");\n");
          out.write("            canvas.width  = marginLeft + marginRight + gaugeCount * guageWidth + (gaugeCount-1) * indent;\n");
          out.write("            canvas.height = guageHeight + marginBottom + marginTop;\n");
          out.write("            var ctx = canvas.getContext(\"2d\");\n");
          out.write("            ctx.fillStyle=\"white\";\n");
          out.write("            ctx.fill();\n");
          out.write("            var img = document.createElement(\"img\");\n");
          out.write("\n");
          out.write("            var img = document.createElement(\"img\");\n");
          out.write("            var encoded_svg = btoa(svgData.replace(/[\\u00A0-\\u2666]/g, function(c) {\n");
          out.write("                return '&#' + c.charCodeAt(0) + ';';\n");
          out.write("            }));\n");
          out.write("            img.setAttribute(\"src\", \"data:image/svg+xml;base64,\" + encoded_svg);\n");
          out.write("\n");
          out.write("            img.onload = function () {\n");
          out.write("                ctx.drawImage(img, 0, 0);\n");
          out.write("                var canvasdata = canvas.toDataURL(\"image/png\");\n");
          out.write("                var a = document.createElement(\"a\");\n");
          out.write("                var file_name = getGaugeFileName();\n");
          out.write("\n");
          out.write("                a.download = file_name + \".png\";\n");
          out.write("                a.href = canvasdata;\n");
          out.write("                document.body.appendChild(a);\n");
          out.write("                a.click();\n");
          out.write("\n");
          out.write("            };\n");
          out.write("        }\n");
          out.write("\n");
          out.write("        function getGaugeFileName() {\n");
          out.write("            var t = new Date($.now());\n");
          out.write("            var current_date = t.getFullYear()+'-'+ t.getMonth()+'-'+ t.getDate()+'__'+t.getHours()+'-'+ t.getMinutes();\n");
          out.write("            return \"Guages_\"+current_date;\n");
          out.write("        }\n");
          out.write("    </script>\n");
          int evalDoAfterBody = _jspx_th_ano_005fpresent_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fpresent_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f0);
      _jspx_th_ano_005fpresent_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fpresent_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:present
    net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f1 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
    boolean _jspx_th_ano_005fpresent_005f1_reused = false;
    try {
      _jspx_th_ano_005fpresent_005f1.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fpresent_005f1.setParent(null);
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(530,0) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fpresent_005f1.setName("thresholds");
      int _jspx_eval_ano_005fpresent_005f1 = _jspx_th_ano_005fpresent_005f1.doStartTag();
      if (_jspx_eval_ano_005fpresent_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("    <script language=\"JavaScript\">\n");
          out.write("        function removeTresholds(thresholdName, dashboard) {\n");
          out.write("            $(\"#removeElementFromDashboardTitle\").html(\"Remove threshold \\\"\" + thresholdName + \"\\\" from dashboard \\\"\"+dashboard+\"\\\"?\");\n");
          out.write("            $(\"#removeElementFromDashboardAction\").attr(\"action\", \"mskDashboardRemoveThreshold\");\n");
          out.write("            $(\"#removeElement\").attr(\"value\", thresholdName);\n");
          out.write("            $(\"#removeElementFromDashboard\").modal('show');\n");
          out.write("        }\n");
          out.write("\n");
          out.write("        function addTresholds(thresholdName, dashboardsToAdd) {\n");
          out.write("            $(\"#selectedElement\").html(\"threshold \\\"\" + thresholdName + \"\\\"\");\n");
          out.write("            $(\"#selectedElementName\").attr(\"value\", thresholdName);\n");
          out.write("            $(\"#addElementToDashboardAction\").attr(\"action\", \"mskAddThresholdToDashboard\");\n");
          out.write("\n");
          out.write("            var dashboards = dashboardsToAdd.split(',');\n");
          out.write("\n");
          out.write("            var textToAdd = \"\";\n");
          out.write("            var checked = dashboards.length == 1 ? \"checked\" : \"\";\n");
          out.write("            for (var i = 0; i < dashboards.length; i++) {\n");
          out.write("                textToAdd +=\n");
          out.write("                        \"<div class=\\\"checkbox\\\"> \" +\n");
          out.write("                        \"<label>\" +\n");
          out.write("                        \"<input type=\\\"checkbox\\\" \"+checked+\" name=\\\"pDashboards\\\" value=\\\"\"+dashboards[i]+\"\\\">\" + dashboards[i] +\n");
          out.write("                        \"</label>\" +\n");
          out.write("                        \"</div>\";\n");
          out.write("\n");
          out.write("            }\n");
          out.write("            $(\"#dashboardsToSelect\").html(textToAdd);\n");
          out.write("\n");
          out.write("            if (dashboards.length == 1) {\n");
          out.write("                $(\"#addElementToDashboardAction\").submit();\n");
          out.write("            } else {\n");
          out.write("                $(\"#addElementToDashboard\").modal('show');\n");
          out.write("            }\n");
          out.write("        }\n");
          out.write("    </script>\n");
          int evalDoAfterBody = _jspx_th_ano_005fpresent_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fpresent_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f1);
      _jspx_th_ano_005fpresent_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fpresent_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:present
    net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f2 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
    boolean _jspx_th_ano_005fpresent_005f2_reused = false;
    try {
      _jspx_th_ano_005fpresent_005f2.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fpresent_005f2.setParent(null);
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(569,0) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fpresent_005f2.setName("charts");
      int _jspx_eval_ano_005fpresent_005f2 = _jspx_th_ano_005fpresent_005f2.doStartTag();
      if (_jspx_eval_ano_005fpresent_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("    <script language=\"JavaScript\">\n");
          out.write("\n");
          out.write("        function removeChart(chartCaption, dashboard) {\n");
          out.write("            $(\"#removeElementFromDashboardTitle\").html(\"Remove chart \\\"\" + chartCaption + \"\\\" from dashboard \\\"\"+dashboard+\"\\\"?\");\n");
          out.write("            $(\"#removeElementFromDashboardAction\").attr(\"action\", \"mskDashboardRemoveChart\");\n");
          out.write("            $(\"#removeElement\").attr(\"value\", chartCaption);\n");
          out.write("            $(\"#removeElementFromDashboard\").modal('show');\n");
          out.write("        }\n");
          out.write("\n");
          out.write("        function addChart(chartCaption, dashboardsToAdd) {\n");
          out.write("\n");
          out.write("            $(\"#selectedElement\").html(\"chart \\\"\" + chartCaption + \"\\\"\");\n");
          out.write("            $(\"#selectedElementName\").attr(\"value\", chartCaption);\n");
          out.write("            $(\"#addElementToDashboardAction\").attr(\"action\", \"mskAddChartToDashboard\");\n");
          out.write("\n");
          out.write("            var dashboards = dashboardsToAdd.split(',');\n");
          out.write("\n");
          out.write("            var textToAdd = \"\";\n");
          out.write("            var checked = dashboards.length == 1 ? \"checked\" : \"\";\n");
          out.write("            for (var i = 0; i < dashboards.length; i++) {\n");
          out.write("                textToAdd +=\n");
          out.write("                        \"<div class=\\\"checkbox\\\"> \" +\n");
          out.write("                        \"<label>\" +\n");
          out.write("                        \"<input type=\\\"checkbox\\\" \"+checked+\" name=\\\"pDashboards\\\" value=\\\"\"+dashboards[i]+\"\\\">\" + dashboards[i] +\n");
          out.write("                        \"</label>\" +\n");
          out.write("                        \"</div>\";\n");
          out.write("\n");
          out.write("            }\n");
          out.write("            $(\"#dashboardsToSelect\").html(textToAdd);\n");
          out.write("\n");
          out.write("            if (dashboards.length == 1) {\n");
          out.write("                $(\"#addElementToDashboardAction\").submit();\n");
          out.write("            } else {\n");
          out.write("                $(\"#addElementToDashboard\").modal('show');\n");
          out.write("            }\n");
          out.write("        }\n");
          out.write("    </script>\n");
          int evalDoAfterBody = _jspx_th_ano_005fpresent_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fpresent_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f2);
      _jspx_th_ano_005fpresent_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f2, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fpresent_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:present
    net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f3 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
    boolean _jspx_th_ano_005fpresent_005f3_reused = false;
    try {
      _jspx_th_ano_005fpresent_005f3.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fpresent_005f3.setParent(null);
      // /net/anotheria/moskito/webui/shared/jsp/Footer.jsp(609,0) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fpresent_005f3.setName("decorators");
      int _jspx_eval_ano_005fpresent_005f3 = _jspx_th_ano_005fpresent_005f3.doStartTag();
      if (_jspx_eval_ano_005fpresent_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("    <script language=\"JavaScript\">\n");
          out.write("        function removeProducer(producerId, dashboard) {\n");
          out.write("            $(\"#removeElementFromDashboardTitle\").html(\"Remove producer \\\"\" + producerId + \"\\\" from dashboard \\\"\"+dashboard+\"\\\"?\");\n");
          out.write("            $(\"#removeElementFromDashboardAction\").attr(\"action\", \"mskDashboardRemoveProducer\");\n");
          out.write("            $(\"#removeElement\").attr(\"value\", producerId);\n");
          out.write("            $(\"#removeElementFromDashboard\").modal('show');\n");
          out.write("        }\n");
          out.write("\n");
          out.write("        function addProducer(producerId, dashboard) {\n");
          out.write("            $(\"#selectedElement\").html(\"producer \\\"\" + producerId + \"\\\"\");\n");
          out.write("            $(\"#selectedElementName\").attr(\"value\", producerId);\n");
          out.write("            $(\"#addElementToDashboardAction\").attr(\"action\", \"mskAddProducerToDashboard\");\n");
          out.write("\n");
          out.write("            var dashboards = dashboard.split(',');\n");
          out.write("\n");
          out.write("            var textToAdd = \"\";\n");
          out.write("            var checked = dashboards.length == 1 ? \"checked\" : \"\";\n");
          out.write("            for (var i = 0; i < dashboards.length; i++) {\n");
          out.write("                textToAdd +=\n");
          out.write("                    \"<div class=\\\"checkbox\\\"> \" +\n");
          out.write("                    \"<label>\" +\n");
          out.write("                    \"<input type=\\\"checkbox\\\" \"+checked+\" name=\\\"pDashboards\\\" value=\\\"\"+dashboards[i]+\"\\\">\" + dashboards[i] +\n");
          out.write("                    \"</label>\" +\n");
          out.write("                    \"</div>\";\n");
          out.write("\n");
          out.write("            }\n");
          out.write("            $(\"#dashboardsToSelect\").html(textToAdd);\n");
          out.write("\n");
          out.write("            if (dashboards.length == 1) {\n");
          out.write("                $(\"#addElementToDashboardAction\").submit();\n");
          out.write("            } else {\n");
          out.write("                $(\"#addElementToDashboard\").modal('show');\n");
          out.write("            }\n");
          out.write("        }\n");
          out.write("    </script>\n");
          int evalDoAfterBody = _jspx_th_ano_005fpresent_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fpresent_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f3);
      _jspx_th_ano_005fpresent_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f3, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f3_reused);
    }
    return false;
  }
}
