/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.16
 * Generated at: 2018-07-10 14:06:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.net.anotheria.moskito.webui.threshold.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Thresholds_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/ano-tags-2.1.1.jar", Long.valueOf(1475585378000L));
    _jspx_dependants.put("jar:file:/home/matheus/JCL-APP/app/src/lib/moskito/moskito-inspect/tomcat/webapps/moskito/WEB-INF/lib/ano-tags-2.1.1.jar!/META-INF/ano-tags.tld", Long.valueOf(1475585374000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.release();
    _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.release();
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid.release();
    _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns=\"http://www.w3.org/1999/html\">\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../shared/jsp/Header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<section id=\"main\">\n");
      out.write("    ");
      if (_jspx_meth_ano_005fequal_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    <div class=\"content\">\n");
      out.write("\n");
      out.write("        <div class=\"box\">\n");
      out.write("            <div class=\"box-title\">\n");
      out.write("                <a class=\"accordion-toggle tooltip-bottom\" title=\"Close/Open\" data-toggle=\"collapse\" href=\"#collapsestatus\"><i class=\"fa fa-caret-down\"></i></a>\n");
      out.write("                <h3 class=\"pull-left\">\n");
      out.write("                    System state\n");
      out.write("                </h3>\n");
      out.write("                <div class=\"box-right-nav\">\n");
      out.write("                    <a href=\"\" class=\"tooltip-bottom\" title=\"Help\"><i class=\"fa fa-info-circle\"></i></a>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"collapsestatus\" class=\"box-content accordion-body collapse in\">\n");
      out.write("                <table class=\"table table-striped tablesorter\">\n");
      out.write("                    <thead>\n");
      out.write("                    <tr>\n");
      out.write("                        <th>Name <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                        <th>Status <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                        <th>Value <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                        <th>Status change <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                        <th>Change Timestamp <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                        <th>FlipCount <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                        <th>Path <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                        <th class=\"th-actions\"></th>\n");
      out.write("                    </tr>\n");
      out.write("                    </thead>\n");
      out.write("                    <tbody>\n");
      out.write("                    ");
      //  ano:iterate
      net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f0 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid.get(net.anotheria.tags.IterateTag.class);
      boolean _jspx_th_ano_005fiterate_005f0_reused = false;
      try {
        _jspx_th_ano_005fiterate_005f0.setPageContext(_jspx_page_context);
        _jspx_th_ano_005fiterate_005f0.setParent(null);
        // /net/anotheria/moskito/webui/threshold/jsp/Thresholds.jsp(42,20) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f0.setName("thresholds");
        // /net/anotheria/moskito/webui/threshold/jsp/Thresholds.jsp(42,20) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f0.setType("net.anotheria.moskito.webui.threshold.bean.ThresholdStatusBean");
        // /net/anotheria/moskito/webui/threshold/jsp/Thresholds.jsp(42,20) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f0.setId("threshold");
        // /net/anotheria/moskito/webui/threshold/jsp/Thresholds.jsp(42,20) name = indexId type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f0.setIndexId("index");
        int _jspx_eval_ano_005fiterate_005f0 = _jspx_th_ano_005fiterate_005f0.doStartTag();
        if (_jspx_eval_ano_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          net.anotheria.moskito.webui.threshold.bean.ThresholdStatusBean threshold = null;
          java.lang.Integer index = null;
          if (_jspx_eval_ano_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f0);
          }
          threshold = (net.anotheria.moskito.webui.threshold.bean.ThresholdStatusBean) _jspx_page_context.findAttribute("threshold");
          index = (java.lang.Integer) _jspx_page_context.findAttribute("index");
          do {
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td><a class=\"threshold-update-link\" data-id=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" href=\"#\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a></td>\n");
            out.write("                        <td><i class=\"status status-");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.colorCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"></i></td>\n");
            out.write("                        <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                        <td><i class=\"status status-");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.previousColorCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"></i> <i class=\"fa fa-long-arrow-right\"></i> <i class=\"status status-");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.colorCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"></i></td>\n");
            out.write("                        <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.timestamp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                        <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.flipCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                        <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.description}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                        <td class=\"actions-links\">\n");
            out.write("                            <a href=\"#mskThresholdDelete\" data-toggle=\"modal\" data-target=\"#mskThresholdDelete\" data-id=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" class=\"action-icon delete-icon tooltip-bottom\" title=\"Delete ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"><i class=\"fa fa-ban\"></i></a>\n");
            out.write("                            <a href=\"#\" class=\"action-icon edit-icon tooltip-bottom threshold-update-link\" data-id=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" title=\"Edit ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"><i class=\"fa fa-pencil\"></i></a>\n");
            out.write("                            ");
            if (_jspx_meth_ano_005fiF_005f0(_jspx_th_ano_005fiterate_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                        </td>\n");
            out.write("                    </tr>\n");
            out.write("                    ");
            int evalDoAfterBody = _jspx_th_ano_005fiterate_005f0.doAfterBody();
            threshold = (net.anotheria.moskito.webui.threshold.bean.ThresholdStatusBean) _jspx_page_context.findAttribute("threshold");
            index = (java.lang.Integer) _jspx_page_context.findAttribute("index");
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_ano_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_ano_005fiterate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid.reuse(_jspx_th_ano_005fiterate_005f0);
        _jspx_th_ano_005fiterate_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f0_reused);
      }
      out.write("\n");
      out.write("                    </tbody>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"box\">\n");
      out.write("            <div class=\"box-title\">\n");
      out.write("                <a class=\"accordion-toggle tooltip-bottom\" title=\"Close/Open\" data-toggle=\"collapse\" href=\"#collapsehistory\"><i class=\"fa fa-caret-down\"></i></a>\n");
      out.write("                <h3 class=\"pull-left\">\n");
      out.write("                    History (newest first)\n");
      out.write("                </h3>\n");
      out.write("                <div class=\"box-right-nav\">\n");
      out.write("                    <a href=\"\" class=\"tooltip-bottom\" title=\"Help\"><i class=\"fa fa-info-circle\"></i></a>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"collapsehistory\" class=\"box-content accordion-body collapse in h-scrollbar\">\n");
      out.write("                <table class=\"table table-striped tablesorter\">\n");
      out.write("                    <thead>\n");
      out.write("                    <tr>\n");
      out.write("                        <th>Timestamp <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                        <th>Name <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                        <th>Status change <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                        <th>Value change <i class=\"fa fa-caret-down\"></i></th>\n");
      out.write("                    </tr>\n");
      out.write("                    </thead>\n");
      out.write("                    <tbody>\n");
      out.write("                    ");
      //  ano:iterate
      net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f1 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid.get(net.anotheria.tags.IterateTag.class);
      boolean _jspx_th_ano_005fiterate_005f1_reused = false;
      try {
        _jspx_th_ano_005fiterate_005f1.setPageContext(_jspx_page_context);
        _jspx_th_ano_005fiterate_005f1.setParent(null);
        // /net/anotheria/moskito/webui/threshold/jsp/Thresholds.jsp(86,20) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f1.setName("alerts");
        // /net/anotheria/moskito/webui/threshold/jsp/Thresholds.jsp(86,20) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f1.setType("net.anotheria.moskito.webui.threshold.api.ThresholdAlertAO");
        // /net/anotheria/moskito/webui/threshold/jsp/Thresholds.jsp(86,20) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f1.setId("alert");
        // /net/anotheria/moskito/webui/threshold/jsp/Thresholds.jsp(86,20) name = indexId type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f1.setIndexId("index");
        int _jspx_eval_ano_005fiterate_005f1 = _jspx_th_ano_005fiterate_005f1.doStartTag();
        if (_jspx_eval_ano_005fiterate_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          net.anotheria.moskito.webui.threshold.api.ThresholdAlertAO alert = null;
          java.lang.Integer index = null;
          if (_jspx_eval_ano_005fiterate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f1);
          }
          alert = (net.anotheria.moskito.webui.threshold.api.ThresholdAlertAO) _jspx_page_context.findAttribute("alert");
          index = (java.lang.Integer) _jspx_page_context.findAttribute("index");
          do {
            out.write("\n");
            out.write("                    <tr>\n");
            out.write("                        <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${alert.timestamp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                        <td><a class=\"threshold-update-link\" data-id=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${alert.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" href=\"#\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${alert.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a></td>\n");
            out.write("                        <td><i class=\"status status-");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${alert.oldColorCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"></i> <i class=\"fa fa-long-arrow-right\"></i> <i class=\"status status-");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${alert.newColorCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"></i></td>\n");
            out.write("                        <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${alert.oldValue}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(" <i class=\"fa fa-long-arrow-right\"></i> ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${alert.newValue}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                    </tr>\n");
            out.write("                    ");
            int evalDoAfterBody = _jspx_th_ano_005fiterate_005f1.doAfterBody();
            alert = (net.anotheria.moskito.webui.threshold.api.ThresholdAlertAO) _jspx_page_context.findAttribute("alert");
            index = (java.lang.Integer) _jspx_page_context.findAttribute("index");
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_ano_005fiterate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_ano_005fiterate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid.reuse(_jspx_th_ano_005fiterate_005f1);
        _jspx_th_ano_005fiterate_005f1_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f1_reused);
      }
      out.write("\n");
      out.write("                    </tbody>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"modal fade modal-danger\" id=\"mskThresholdDelete\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n");
      out.write("        <div class=\"modal-dialog\">\n");
      out.write("            <div class=\"modal-content\">\n");
      out.write("                <div class=\"modal-header\">\n");
      out.write("                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n");
      out.write("                    <h4 class=\"modal-title\" id=\"myModalLabel\">Delete this Threshold?</h4>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"modal-footer text-center\">\n");
      out.write("                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n");
      out.write("                    <a href=\"#\" class=\"btn btn-danger threshold-delete-confirm\">Delete</a>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../shared/jsp/Footer.jsp", out, false);
      out.write("\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "snippet/ThresholdUpdateModal.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("        $(function () {\n");
      out.write("            $('.actions-links').on('click','.delete-icon', function() {\n");
      out.write("                var dataid = $(this).attr('data-id');\n");
      out.write("                $('.threshold-delete-confirm').attr(\"href\", \"mskThresholdDelete?pId=\" + dataid);\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            // Event listener for threshold update click\n");
      out.write("            $('.threshold-update-link').click(function (e) {\n");
      out.write("                e.preventDefault();\n");
      out.write("\n");
      out.write("                var thresholdId = $(this).data('id');\n");
      out.write("                showThresholdUpdateModal(thresholdId);\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("\n");
      out.write("</section>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_ano_005fequal_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:equal
    net.anotheria.tags.EqualTag _jspx_th_ano_005fequal_005f0 = (net.anotheria.tags.EqualTag) _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.get(net.anotheria.tags.EqualTag.class);
    boolean _jspx_th_ano_005fequal_005f0_reused = false;
    try {
      _jspx_th_ano_005fequal_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fequal_005f0.setParent(null);
      // /net/anotheria/moskito/webui/threshold/jsp/Thresholds.jsp(9,4) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f0.setName("newThresholdAdded");
      // /net/anotheria/moskito/webui/threshold/jsp/Thresholds.jsp(9,4) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fequal_005f0.setValue("true");
      int _jspx_eval_ano_005fequal_005f0 = _jspx_th_ano_005fequal_005f0.doStartTag();
      if (_jspx_eval_ano_005fequal_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("        <div class=\"alert alert-success alert-dismissable\">\n");
          out.write("            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>\n");
          out.write("            Threshold ");
          if (_jspx_meth_ano_005fwrite_005f0(_jspx_th_ano_005fequal_005f0, _jspx_page_context))
            return true;
          out.write(" added!\n");
          out.write("        </div>\n");
          out.write("    ");
          int evalDoAfterBody = _jspx_th_ano_005fequal_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fequal_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fequal_0026_005fvalue_005fname.reuse(_jspx_th_ano_005fequal_005f0);
      _jspx_th_ano_005fequal_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fequal_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fequal_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fequal_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f0 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f0_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fequal_005f0);
      // /net/anotheria/moskito/webui/threshold/jsp/Thresholds.jsp(12,22) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f0.setName("newThresholdName");
      int _jspx_eval_ano_005fwrite_005f0 = _jspx_th_ano_005fwrite_005f0.doStartTag();
      if (_jspx_th_ano_005fwrite_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f0);
      _jspx_th_ano_005fwrite_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fiF_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:iF
    net.anotheria.tags.IfTag _jspx_th_ano_005fiF_005f0 = (net.anotheria.tags.IfTag) _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.get(net.anotheria.tags.IfTag.class);
    boolean _jspx_th_ano_005fiF_005f0_reused = false;
    try {
      _jspx_th_ano_005fiF_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fiF_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f0);
      // /net/anotheria/moskito/webui/threshold/jsp/Thresholds.jsp(54,28) name = test type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fiF_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.dashboardsToAdd != ''}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_ano_005fiF_005f0 = _jspx_th_ano_005fiF_005f0.doStartTag();
      if (_jspx_eval_ano_005fiF_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                                <a onclick=\"addTresholds('");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("', '");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.dashboardsToAdd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("');\" href=\"#\" class=\"action-icon edit-icon tooltip-bottom\" title=\"Add ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${threshold.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(" to dashboard\"><i class=\"fa fa-cog\"></i></a>\n");
          out.write("                            ");
          int evalDoAfterBody = _jspx_th_ano_005fiF_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fiF_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.reuse(_jspx_th_ano_005fiF_005f0);
      _jspx_th_ano_005fiF_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiF_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fiF_005f0_reused);
    }
    return false;
  }
}
