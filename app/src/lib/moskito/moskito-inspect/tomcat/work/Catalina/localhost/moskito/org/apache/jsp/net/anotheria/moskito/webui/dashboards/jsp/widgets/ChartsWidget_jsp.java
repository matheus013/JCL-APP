/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.16
 * Generated at: 2018-07-10 13:36:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.net.anotheria.moskito.webui.dashboards.jsp.widgets;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ChartsWidget_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/ano-tags-2.1.1.jar", Long.valueOf(1475585378000L));
    _jspx_dependants.put("jar:file:/home/matheus/JCL-APP/app/src/lib/moskito/moskito-inspect/tomcat/webapps/moskito/WEB-INF/lib/ano-tags-2.1.1.jar!/META-INF/ano-tags.tld", Long.valueOf(1475585374000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fdefine_0026_005ftype_005ftoScope_005fscope_005fproperty_005fname_005fid_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fdefine_0026_005ftype_005ftoScope_005fscope_005fproperty_005fname_005fid_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.release();
    _005fjspx_005ftagPool_005fano_005fdefine_0026_005ftype_005ftoScope_005fscope_005fproperty_005fname_005fid_005fnobody.release();
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid.release();
    _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.release();
    _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.release();
    _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.release();
    _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.release();
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid.release();
    _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;

    java.lang.Object _jspx_value_1 = null;
    java.lang.Integer _jspx_i_1 = null;
    java.lang.Object _jspx_lineName_1 = null;
    java.lang.Object _jspx_guard_1 = null;

    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    var multipleGraphData = [];\n");
      out.write("    var multipleGraphNames = [];\n");
      out.write("    var multipleGraphColors = [];\n");
      out.write("    ");
      //  ano:iterate
      net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f0 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.get(net.anotheria.tags.IterateTag.class);
      boolean _jspx_th_ano_005fiterate_005f0_reused = false;
      try {
        _jspx_th_ano_005fiterate_005f0.setPageContext(_jspx_page_context);
        _jspx_th_ano_005fiterate_005f0.setParent(null);
        // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(8,4) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f0.setId("chart");
        // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(8,4) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f0.setName("charts");
        // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(8,4) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f0.setType("net.anotheria.moskito.webui.dashboards.bean.DashboardChartBean");
        int _jspx_eval_ano_005fiterate_005f0 = _jspx_th_ano_005fiterate_005f0.doStartTag();
        if (_jspx_eval_ano_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          net.anotheria.moskito.webui.dashboards.bean.DashboardChartBean chart = null;
          if (_jspx_eval_ano_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f0);
          }
          chart = (net.anotheria.moskito.webui.dashboards.bean.DashboardChartBean) _jspx_page_context.findAttribute("chart");
          do {
            out.write("\n");
            out.write("    ");
            //  ano:define
            net.anotheria.tags.DefineTag _jspx_th_ano_005fdefine_005f0 = (net.anotheria.tags.DefineTag) _005fjspx_005ftagPool_005fano_005fdefine_0026_005ftype_005ftoScope_005fscope_005fproperty_005fname_005fid_005fnobody.get(net.anotheria.tags.DefineTag.class);
            boolean _jspx_th_ano_005fdefine_005f0_reused = false;
            try {
              _jspx_th_ano_005fdefine_005f0.setPageContext(_jspx_page_context);
              _jspx_th_ano_005fdefine_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f0);
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(9,4) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fdefine_005f0.setId("singleChart");
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(9,4) name = toScope type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fdefine_005f0.setToScope("page");
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(9,4) name = scope type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fdefine_005f0.setScope("page");
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(9,4) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fdefine_005f0.setName("chart");
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(9,4) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fdefine_005f0.setProperty("chart");
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(9,4) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fdefine_005f0.setType("net.anotheria.moskito.webui.accumulators.api.MultilineChartAO");
              int _jspx_eval_ano_005fdefine_005f0 = _jspx_th_ano_005fdefine_005f0.doStartTag();
              if (_jspx_th_ano_005fdefine_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fano_005fdefine_0026_005ftype_005ftoScope_005fscope_005fproperty_005fname_005fid_005fnobody.reuse(_jspx_th_ano_005fdefine_005f0);
              _jspx_th_ano_005fdefine_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fdefine_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fdefine_005f0_reused);
            }
            net.anotheria.moskito.webui.accumulators.api.MultilineChartAO singleChart = null;
            singleChart = (net.anotheria.moskito.webui.accumulators.api.MultilineChartAO) _jspx_page_context.findAttribute("singleChart");
            out.write("\n");
            out.write("    multipleGraphData.push([\n");
            out.write("        ");
            //  ano:iterate
            net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f1 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid.get(net.anotheria.tags.IterateTag.class);
            boolean _jspx_th_ano_005fiterate_005f1_reused = false;
            try {
              _jspx_th_ano_005fiterate_005f1.setPageContext(_jspx_page_context);
              _jspx_th_ano_005fiterate_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f0);
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(11,8) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f1.setName("singleChart");
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(11,8) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f1.setProperty("data");
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(11,8) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f1.setId("value");
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(11,8) name = indexId type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f1.setIndexId("i");
              int _jspx_eval_ano_005fiterate_005f1 = _jspx_th_ano_005fiterate_005f1.doStartTag();
              if (_jspx_eval_ano_005fiterate_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                java.lang.Object value = null;
                java.lang.Integer i = null;
                if (_jspx_eval_ano_005fiterate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f1);
                }
                value = (java.lang.Object) _jspx_page_context.findAttribute("value");
                i = (java.lang.Integer) _jspx_page_context.findAttribute("i");
                do {
                  out.write("\n");
                  out.write("        ");
                  if (_jspx_meth_ano_005fnotEqual_005f0(_jspx_th_ano_005fiterate_005f1, _jspx_page_context))
                    return;
                  if (_jspx_meth_ano_005fwrite_005f0(_jspx_th_ano_005fiterate_005f1, _jspx_page_context))
                    return;
                  out.write("\n");
                  out.write("        ");
                  int evalDoAfterBody = _jspx_th_ano_005fiterate_005f1.doAfterBody();
                  value = (java.lang.Object) _jspx_page_context.findAttribute("value");
                  i = (java.lang.Integer) _jspx_page_context.findAttribute("i");
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_ano_005fiterate_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_ano_005fiterate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid.reuse(_jspx_th_ano_005fiterate_005f1);
              _jspx_th_ano_005fiterate_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f1_reused);
            }
            out.write("\n");
            out.write("    ]);\n");
            out.write("    multipleGraphNames.push([\n");
            out.write("        ");
            //  ano:iterate
            net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f2 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid.get(net.anotheria.tags.IterateTag.class);
            boolean _jspx_th_ano_005fiterate_005f2_reused = false;
            try {
              _jspx_th_ano_005fiterate_005f2.setPageContext(_jspx_page_context);
              _jspx_th_ano_005fiterate_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f0);
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(16,8) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f2.setName("singleChart");
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(16,8) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f2.setProperty("names");
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(16,8) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f2.setId("lineName");
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(16,8) name = indexId type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f2.setIndexId("i");
              int _jspx_eval_ano_005fiterate_005f2 = _jspx_th_ano_005fiterate_005f2.doStartTag();
              if (_jspx_eval_ano_005fiterate_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                java.lang.Object lineName = null;
                java.lang.Integer i = null;
                if (_jspx_eval_ano_005fiterate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f2);
                }
                lineName = (java.lang.Object) _jspx_page_context.findAttribute("lineName");
                i = (java.lang.Integer) _jspx_page_context.findAttribute("i");
                do {
                  out.write("\n");
                  out.write("        ");
                  if (_jspx_meth_ano_005fnotEqual_005f1(_jspx_th_ano_005fiterate_005f2, _jspx_page_context))
                    return;
                  out.write('\'');
                  if (_jspx_meth_ano_005fwrite_005f1(_jspx_th_ano_005fiterate_005f2, _jspx_page_context))
                    return;
                  out.write("'\n");
                  out.write("        ");
                  int evalDoAfterBody = _jspx_th_ano_005fiterate_005f2.doAfterBody();
                  lineName = (java.lang.Object) _jspx_page_context.findAttribute("lineName");
                  i = (java.lang.Integer) _jspx_page_context.findAttribute("i");
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_ano_005fiterate_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_ano_005fiterate_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid.reuse(_jspx_th_ano_005fiterate_005f2);
              _jspx_th_ano_005fiterate_005f2_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f2, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f2_reused);
            }
            out.write("\n");
            out.write("    ]);\n");
            out.write("    multipleGraphColors.push(\n");
            out.write("        ");
            if (_jspx_meth_ano_005fwrite_005f2(_jspx_th_ano_005fiterate_005f0, _jspx_page_context))
              return;
            out.write("\n");
            out.write("    );\n");
            out.write("    ");
            int evalDoAfterBody = _jspx_th_ano_005fiterate_005f0.doAfterBody();
            chart = (net.anotheria.moskito.webui.dashboards.bean.DashboardChartBean) _jspx_page_context.findAttribute("chart");
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_ano_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_ano_005fiterate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.reuse(_jspx_th_ano_005fiterate_005f0);
        _jspx_th_ano_005fiterate_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f0_reused);
      }
      out.write("\n");
      out.write("\n");
      out.write("    ");
      //  ano:present
      net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f0 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
      boolean _jspx_th_ano_005fpresent_005f0_reused = false;
      try {
        _jspx_th_ano_005fpresent_005f0.setPageContext(_jspx_page_context);
        _jspx_th_ano_005fpresent_005f0.setParent(null);
        // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(25,4) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fpresent_005f0.setName("thresholdsGraph");
        int _jspx_eval_ano_005fpresent_005f0 = _jspx_th_ano_005fpresent_005f0.doStartTag();
        if (_jspx_eval_ano_005fpresent_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("        var thresholdsGraph = [];\n");
            out.write("        ");
            //  ano:iterate
            net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f3 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.get(net.anotheria.tags.IterateTag.class);
            boolean _jspx_th_ano_005fiterate_005f3_reused = false;
            try {
              _jspx_th_ano_005fiterate_005f3.setPageContext(_jspx_page_context);
              _jspx_th_ano_005fiterate_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f0);
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(27,8) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f3.setName("thresholdsGraph");
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(27,8) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f3.setType("java.util.Map.Entry");
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(27,8) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fiterate_005f3.setId("thresholdGraph");
              int _jspx_eval_ano_005fiterate_005f3 = _jspx_th_ano_005fiterate_005f3.doStartTag();
              if (_jspx_eval_ano_005fiterate_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                java.util.Map.Entry thresholdGraph = null;
                if (_jspx_eval_ano_005fiterate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f3);
                }
                thresholdGraph = (java.util.Map.Entry) _jspx_page_context.findAttribute("thresholdGraph");
                do {
                  out.write("\n");
                  out.write("            thresholdsGraph.push({\n");
                  out.write("                ");
                  //  ano:iterate
                  net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f4 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid.get(net.anotheria.tags.IterateTag.class);
                  boolean _jspx_th_ano_005fiterate_005f4_reused = false;
                  try {
                    _jspx_th_ano_005fiterate_005f4.setPageContext(_jspx_page_context);
                    _jspx_th_ano_005fiterate_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f3);
                    // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(29,16) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f4.setName("thresholdGraph");
                    // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(29,16) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f4.setProperty("value");
                    // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(29,16) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f4.setId("guard");
                    // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(29,16) name = indexId type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f4.setIndexId("i");
                    int _jspx_eval_ano_005fiterate_005f4 = _jspx_th_ano_005fiterate_005f4.doStartTag();
                    if (_jspx_eval_ano_005fiterate_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      java.lang.Object guard = null;
                      java.lang.Integer i = null;
                      if (_jspx_eval_ano_005fiterate_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                        out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f4);
                      }
                      guard = (java.lang.Object) _jspx_page_context.findAttribute("guard");
                      i = (java.lang.Integer) _jspx_page_context.findAttribute("i");
                      do {
                        out.write("\n");
                        out.write("                    ");
                        if (_jspx_meth_ano_005fnotEqual_005f2(_jspx_th_ano_005fiterate_005f4, _jspx_page_context))
                          return;
                        out.write(' ');
                        if (_jspx_meth_ano_005fwrite_005f3(_jspx_th_ano_005fiterate_005f4, _jspx_page_context))
                          return;
                        out.write(':');
                        if (_jspx_meth_ano_005fwrite_005f4(_jspx_th_ano_005fiterate_005f4, _jspx_page_context))
                          return;
                        out.write("\n");
                        out.write("                ");
                        int evalDoAfterBody = _jspx_th_ano_005fiterate_005f4.doAfterBody();
                        guard = (java.lang.Object) _jspx_page_context.findAttribute("guard");
                        i = (java.lang.Integer) _jspx_page_context.findAttribute("i");
                        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                          break;
                      } while (true);
                      if (_jspx_eval_ano_005fiterate_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                        out = _jspx_page_context.popBody();
                      }
                    }
                    if (_jspx_th_ano_005fiterate_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                    _005fjspx_005ftagPool_005fano_005fiterate_0026_005fproperty_005fname_005findexId_005fid.reuse(_jspx_th_ano_005fiterate_005f4);
                    _jspx_th_ano_005fiterate_005f4_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f4, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f4_reused);
                  }
                  out.write("\n");
                  out.write("            })\n");
                  out.write("        ");
                  int evalDoAfterBody = _jspx_th_ano_005fiterate_005f3.doAfterBody();
                  thresholdGraph = (java.util.Map.Entry) _jspx_page_context.findAttribute("thresholdGraph");
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_ano_005fiterate_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_ano_005fiterate_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.reuse(_jspx_th_ano_005fiterate_005f3);
              _jspx_th_ano_005fiterate_005f3_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f3, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f3_reused);
            }
            out.write("\n");
            out.write("\n");
            out.write("        var thresholdsGraphColors = (thresholdsGraph.length > 0) ? getThresholdsGraphColors() : {};\n");
            out.write("\n");
            out.write("        function getThresholdsGraphColors() {\n");
            out.write("            var colors = {};\n");
            out.write("\n");
            out.write("            ");
            //  ano:present
            net.anotheria.tags.PresentTag _jspx_th_ano_005fpresent_005f1 = (net.anotheria.tags.PresentTag) _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.get(net.anotheria.tags.PresentTag.class);
            boolean _jspx_th_ano_005fpresent_005f1_reused = false;
            try {
              _jspx_th_ano_005fpresent_005f1.setPageContext(_jspx_page_context);
              _jspx_th_ano_005fpresent_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f0);
              // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(40,12) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_ano_005fpresent_005f1.setName("thresholdGraphColors");
              int _jspx_eval_ano_005fpresent_005f1 = _jspx_th_ano_005fpresent_005f1.doStartTag();
              if (_jspx_eval_ano_005fpresent_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\n");
                  out.write("                ");
                  //  ano:iterate
                  net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f5 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.get(net.anotheria.tags.IterateTag.class);
                  boolean _jspx_th_ano_005fiterate_005f5_reused = false;
                  try {
                    _jspx_th_ano_005fiterate_005f5.setPageContext(_jspx_page_context);
                    _jspx_th_ano_005fiterate_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fpresent_005f1);
                    // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(41,16) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f5.setName("thresholdGraphColors");
                    // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(41,16) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f5.setType("net.anotheria.moskito.webui.util.ThresholdGraphColor");
                    // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(41,16) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_ano_005fiterate_005f5.setId("thresholdGraphColor");
                    int _jspx_eval_ano_005fiterate_005f5 = _jspx_th_ano_005fiterate_005f5.doStartTag();
                    if (_jspx_eval_ano_005fiterate_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      net.anotheria.moskito.webui.util.ThresholdGraphColor thresholdGraphColor = null;
                      if (_jspx_eval_ano_005fiterate_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                        out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f5);
                      }
                      thresholdGraphColor = (net.anotheria.moskito.webui.util.ThresholdGraphColor) _jspx_page_context.findAttribute("thresholdGraphColor");
                      do {
                        out.write("\n");
                        out.write("                    colors[\"");
                        if (_jspx_meth_ano_005fwrite_005f5(_jspx_th_ano_005fiterate_005f5, _jspx_page_context))
                          return;
                        out.write("\"] = \"");
                        if (_jspx_meth_ano_005fwrite_005f6(_jspx_th_ano_005fiterate_005f5, _jspx_page_context))
                          return;
                        out.write("\";\n");
                        out.write("                ");
                        int evalDoAfterBody = _jspx_th_ano_005fiterate_005f5.doAfterBody();
                        thresholdGraphColor = (net.anotheria.moskito.webui.util.ThresholdGraphColor) _jspx_page_context.findAttribute("thresholdGraphColor");
                        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                          break;
                      } while (true);
                      if (_jspx_eval_ano_005fiterate_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                        out = _jspx_page_context.popBody();
                      }
                    }
                    if (_jspx_th_ano_005fiterate_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.reuse(_jspx_th_ano_005fiterate_005f5);
                    _jspx_th_ano_005fiterate_005f5_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f5, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f5_reused);
                  }
                  out.write("\n");
                  out.write("            ");
                  int evalDoAfterBody = _jspx_th_ano_005fpresent_005f1.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_ano_005fpresent_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f1);
              _jspx_th_ano_005fpresent_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f1_reused);
            }
            out.write("\n");
            out.write("\n");
            out.write("            colors.GREEN = colors.GREEN || \"#53d769\";\n");
            out.write("            colors.YELLOW = colors.YELLOW || \"#ffde00\";\n");
            out.write("            colors.ORANGE = colors.ORANGE || \"#ff8023\";\n");
            out.write("            colors.RED = colors.RED || \"#fc3e39\";\n");
            out.write("            colors.PURPLE = colors.PURPLE || \"#b44bc4\";\n");
            out.write("\n");
            out.write("            return colors;\n");
            out.write("        }\n");
            out.write("    ");
            int evalDoAfterBody = _jspx_th_ano_005fpresent_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_ano_005fpresent_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fano_005fpresent_0026_005fname.reuse(_jspx_th_ano_005fpresent_005f0);
        _jspx_th_ano_005fpresent_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fpresent_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fpresent_005f0_reused);
      }
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<div class=\"dashboard-line\">\n");
      out.write("\n");
      out.write("    <div class=\"row\">\n");
      out.write("        ");
      //  ano:iterate
      net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f6 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid.get(net.anotheria.tags.IterateTag.class);
      boolean _jspx_th_ano_005fiterate_005f6_reused = false;
      try {
        _jspx_th_ano_005fiterate_005f6.setPageContext(_jspx_page_context);
        _jspx_th_ano_005fiterate_005f6.setParent(null);
        // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(60,8) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f6.setId("chart");
        // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(60,8) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f6.setName("charts");
        // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(60,8) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f6.setType("net.anotheria.moskito.webui.dashboards.bean.DashboardChartBean");
        // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(60,8) name = indexId type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f6.setIndexId("index");
        int _jspx_eval_ano_005fiterate_005f6 = _jspx_th_ano_005fiterate_005f6.doStartTag();
        if (_jspx_eval_ano_005fiterate_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          net.anotheria.moskito.webui.dashboards.bean.DashboardChartBean chart = null;
          java.lang.Integer index = null;
          if (_jspx_eval_ano_005fiterate_005f6 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f6);
          }
          chart = (net.anotheria.moskito.webui.dashboards.bean.DashboardChartBean) _jspx_page_context.findAttribute("chart");
          index = (java.lang.Integer) _jspx_page_context.findAttribute("index");
          do {
            out.write("\n");
            out.write("            <div class=\"col-lg-6 col-md-12\">\n");
            out.write("                <div class=\"box\">\n");
            out.write("                    <div class=\"box-title\">\n");
            out.write("                        <a class=\"accordion-toggle tooltip-bottom\" title=\"Close/Open\" data-toggle=\"collapse\" href=\"#collapse_chart");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"><i class=\"fa fa-caret-down\"></i></a>\n");
            out.write("                        <h3 class=\"pull-left chart-header\">\n");
            out.write("                                ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chart.caption}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\n");
            out.write("                        </h3>\n");
            out.write("\n");
            out.write("                        <div class=\"box-right-nav dropdown\">\n");
            out.write("                            <a href=\"#\" data-target=\"#\" data-toggle=\"dropdown\"><i class=\"fa fa-cog\"></i></a>\n");
            out.write("                            <ul class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dLabel\">\n");
            out.write("                                <li><a href=\"\" onclick=\"saveSvgAsPng(event, ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("+countGauges())\">Screenshot</a></li>\n");
            out.write("                                ");
            if (_jspx_meth_ano_005fiF_005f0(_jspx_th_ano_005fiterate_005f6, _jspx_page_context))
              return;
            out.write("\n");
            out.write("                                <li><a onclick=\"removeChart('");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chart.chartNames}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("', '");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.selectedDashboard}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("')\">Remove</a></li>\n");
            out.write("                            </ul>\n");
            out.write("                        </div>\n");
            out.write("                    </div>\n");
            out.write("                    <div id=\"collapse_chart");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" class=\"box-content accordion-body collapse in\">\n");
            out.write("                        <div class=\"paddner\"><div id=\"chart_div");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" class=\"accumulator-chart\"></div></div>\n");
            out.write("                    </div>\n");
            out.write("                </div>\n");
            out.write("            </div>\n");
            out.write("        ");
            int evalDoAfterBody = _jspx_th_ano_005fiterate_005f6.doAfterBody();
            chart = (net.anotheria.moskito.webui.dashboards.bean.DashboardChartBean) _jspx_page_context.findAttribute("chart");
            index = (java.lang.Integer) _jspx_page_context.findAttribute("index");
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_ano_005fiterate_005f6 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_ano_005fiterate_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005findexId_005fid.reuse(_jspx_th_ano_005fiterate_005f6);
        _jspx_th_ano_005fiterate_005f6_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f6, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f6_reused);
      }
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    var names = multipleGraphNames.map(function (graphNames) {\n");
      out.write("        return graphNames;\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    var containerSelectors = $('.accumulator-chart').map(function () {\n");
      out.write("        return $(this).attr(\"id\");\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    multipleGraphData.forEach(function (graphData, index) {\n");
      out.write("        var chartParams = {\n");
      out.write("            container: containerSelectors[index],\n");
      out.write("            names: names[index],\n");
      out.write("            data: graphData,\n");
      out.write("            colors: multipleGraphColors[index],\n");
      out.write("            type: 'LineChart',\n");
      out.write("            title: names[index],\n");
      out.write("            dataType: 'datetime',\n");
      out.write("            options: {\n");
      out.write("                legendsPerSlice: 6,\n");
      out.write("                margin: {top: 20, right: 10, bottom: 20, left: 40}\n");
      out.write("            }\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        if (!isEmptyObject(thresholdsGraph[index])) {\n");
      out.write("            addThresholdsToChart(thresholdsGraph[index], chartParams);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        chartEngineIniter.init(chartParams);\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    function addThresholdsToChart(thresholds, chartParams) {\n");
      out.write("        for (var color in thresholds) {\n");
      out.write("            if (thresholds.hasOwnProperty(color)) {\n");
      out.write("                if (thresholdsGraphColors.hasOwnProperty(color)) {\n");
      out.write("                    var gauge = thresholds[color];\n");
      out.write("                    var data = chartParams.data;\n");
      out.write("                    var legendColorName = color.substring(0, 1) + color.substring(1).toLowerCase() + \" Barrier\";\n");
      out.write("                    chartParams.colors.push({\"color\": thresholdsGraphColors[color], \"name\": legendColorName});\n");
      out.write("                    chartParams.names.push(legendColorName);\n");
      out.write("                    for (var i = 0, length = data.length; i < length; i++) {\n");
      out.write("                        data[i].push(gauge);\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function isEmptyObject(obj) {\n");
      out.write("        for (var property in obj) {\n");
      out.write("            if (obj.hasOwnProperty(property)) {\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        return true;\n");
      out.write("    }\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_ano_005fnotEqual_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:notEqual
    net.anotheria.tags.NotEqualTag _jspx_th_ano_005fnotEqual_005f0 = (net.anotheria.tags.NotEqualTag) _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.get(net.anotheria.tags.NotEqualTag.class);
    boolean _jspx_th_ano_005fnotEqual_005f0_reused = false;
    try {
      _jspx_th_ano_005fnotEqual_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fnotEqual_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f1);
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(12,8) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f0.setName("i");
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(12,8) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f0.setValue("0");
      int _jspx_eval_ano_005fnotEqual_005f0 = _jspx_th_ano_005fnotEqual_005f0.doStartTag();
      if (_jspx_eval_ano_005fnotEqual_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(',');
          int evalDoAfterBody = _jspx_th_ano_005fnotEqual_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fnotEqual_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.reuse(_jspx_th_ano_005fnotEqual_005f0);
      _jspx_th_ano_005fnotEqual_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fnotEqual_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fnotEqual_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f0 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f0_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f1);
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(12,57) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f0.setName("value");
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(12,57) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f0.setProperty("JSONWithNumericTimestamp");
      int _jspx_eval_ano_005fwrite_005f0 = _jspx_th_ano_005fwrite_005f0.doStartTag();
      if (_jspx_th_ano_005fwrite_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f0);
      _jspx_th_ano_005fwrite_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fnotEqual_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:notEqual
    net.anotheria.tags.NotEqualTag _jspx_th_ano_005fnotEqual_005f1 = (net.anotheria.tags.NotEqualTag) _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.get(net.anotheria.tags.NotEqualTag.class);
    boolean _jspx_th_ano_005fnotEqual_005f1_reused = false;
    try {
      _jspx_th_ano_005fnotEqual_005f1.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fnotEqual_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f2);
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(17,8) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f1.setName("i");
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(17,8) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f1.setValue("0");
      int _jspx_eval_ano_005fnotEqual_005f1 = _jspx_th_ano_005fnotEqual_005f1.doStartTag();
      if (_jspx_eval_ano_005fnotEqual_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(',');
          int evalDoAfterBody = _jspx_th_ano_005fnotEqual_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fnotEqual_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.reuse(_jspx_th_ano_005fnotEqual_005f1);
      _jspx_th_ano_005fnotEqual_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fnotEqual_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fnotEqual_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f1 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f1_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f1.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f2);
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(17,58) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f1.setName("lineName");
      int _jspx_eval_ano_005fwrite_005f1 = _jspx_th_ano_005fwrite_005f1.doStartTag();
      if (_jspx_th_ano_005fwrite_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f1);
      _jspx_th_ano_005fwrite_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f1, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f2 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f2_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f2.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f0);
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(21,8) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f2.setName("singleChart");
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(21,8) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f2.setProperty("accumulatorsColorsDataJSON");
      int _jspx_eval_ano_005fwrite_005f2 = _jspx_th_ano_005fwrite_005f2.doStartTag();
      if (_jspx_th_ano_005fwrite_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f2);
      _jspx_th_ano_005fwrite_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f2, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fnotEqual_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:notEqual
    net.anotheria.tags.NotEqualTag _jspx_th_ano_005fnotEqual_005f2 = (net.anotheria.tags.NotEqualTag) _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.get(net.anotheria.tags.NotEqualTag.class);
    boolean _jspx_th_ano_005fnotEqual_005f2_reused = false;
    try {
      _jspx_th_ano_005fnotEqual_005f2.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fnotEqual_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f4);
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(30,20) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f2.setName("i");
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(30,20) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fnotEqual_005f2.setValue("0");
      int _jspx_eval_ano_005fnotEqual_005f2 = _jspx_th_ano_005fnotEqual_005f2.doStartTag();
      if (_jspx_eval_ano_005fnotEqual_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(',');
          int evalDoAfterBody = _jspx_th_ano_005fnotEqual_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fnotEqual_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fnotEqual_0026_005fvalue_005fname.reuse(_jspx_th_ano_005fnotEqual_005f2);
      _jspx_th_ano_005fnotEqual_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fnotEqual_005f2, _jsp_getInstanceManager(), _jspx_th_ano_005fnotEqual_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f3 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f3_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f3.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f4);
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(30,70) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f3.setName("guard");
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(30,70) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f3.setProperty("status");
      int _jspx_eval_ano_005fwrite_005f3 = _jspx_th_ano_005fwrite_005f3.doStartTag();
      if (_jspx_th_ano_005fwrite_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f3);
      _jspx_th_ano_005fwrite_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f3, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f4 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f4_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f4.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f4);
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(30,114) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f4.setName("guard");
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(30,114) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f4.setProperty("value");
      int _jspx_eval_ano_005fwrite_005f4 = _jspx_th_ano_005fwrite_005f4.doStartTag();
      if (_jspx_th_ano_005fwrite_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f4);
      _jspx_th_ano_005fwrite_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f4, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f5 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f5_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f5.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f5);
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(42,28) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f5.setName("thresholdGraphColor");
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(42,28) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f5.setProperty("status");
      int _jspx_eval_ano_005fwrite_005f5 = _jspx_th_ano_005fwrite_005f5.doStartTag();
      if (_jspx_th_ano_005fwrite_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f5);
      _jspx_th_ano_005fwrite_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f5, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fwrite_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:write
    net.anotheria.tags.WriteTag _jspx_th_ano_005fwrite_005f6 = (net.anotheria.tags.WriteTag) _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.get(net.anotheria.tags.WriteTag.class);
    boolean _jspx_th_ano_005fwrite_005f6_reused = false;
    try {
      _jspx_th_ano_005fwrite_005f6.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fwrite_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f5);
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(42,91) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f6.setName("thresholdGraphColor");
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(42,91) name = property type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fwrite_005f6.setProperty("color");
      int _jspx_eval_ano_005fwrite_005f6 = _jspx_th_ano_005fwrite_005f6.doStartTag();
      if (_jspx_th_ano_005fwrite_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fwrite_0026_005fproperty_005fname_005fnobody.reuse(_jspx_th_ano_005fwrite_005f6);
      _jspx_th_ano_005fwrite_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fwrite_005f6, _jsp_getInstanceManager(), _jspx_th_ano_005fwrite_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_ano_005fiF_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_ano_005fiterate_005f6, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  ano:iF
    net.anotheria.tags.IfTag _jspx_th_ano_005fiF_005f0 = (net.anotheria.tags.IfTag) _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.get(net.anotheria.tags.IfTag.class);
    boolean _jspx_th_ano_005fiF_005f0_reused = false;
    try {
      _jspx_th_ano_005fiF_005f0.setPageContext(_jspx_page_context);
      _jspx_th_ano_005fiF_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_ano_005fiterate_005f6);
      // /net/anotheria/moskito/webui/dashboards/jsp/widgets/ChartsWidget.jsp(73,32) name = test type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_ano_005fiF_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chart.dashboardsToAdd != ''}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_ano_005fiF_005f0 = _jspx_th_ano_005fiF_005f0.doStartTag();
      if (_jspx_eval_ano_005fiF_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                                    <li><a onclick=\"addChart('");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chart.chartNames}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('\'');
          out.write(',');
          out.write('\'');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chart.dashboardsToAdd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("')\">Add to Dashboard</a></li>\n");
          out.write("                                ");
          int evalDoAfterBody = _jspx_th_ano_005fiF_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_ano_005fiF_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fano_005fiF_0026_005ftest.reuse(_jspx_th_ano_005fiF_005f0);
      _jspx_th_ano_005fiF_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiF_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fiF_005f0_reused);
    }
    return false;
  }
}
