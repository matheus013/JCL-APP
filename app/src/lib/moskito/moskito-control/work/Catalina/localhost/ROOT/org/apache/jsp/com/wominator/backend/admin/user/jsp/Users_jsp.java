/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.24
 * Generated at: 2018-02-12 13:40:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.com.wominator.backend.admin.user.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Users_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/opt/wominator/apache-tomcat-8.5.24/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153377882000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1421542767000L));
    _jspx_dependants.put("/WEB-INF/tld/ano-tags.tld", Long.valueOf(1518442126000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../shared/jsp/Header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<section class=\"section-content\">\n");
      out.write("    <div class=\"container container-fluid\">\n");
      out.write("        <div class=\"contant-header\">\n");
      out.write("            <div class=\"row\">\n");
      out.write("                <div class=\"col-sm-3\">\n");
      out.write("                    <div class=\"form-group\">\n");
      out.write("                        ");
      out.write("\n");
      out.write("                        <select class=\"form-control\" id=\"elements-per-page-dropdown1\" onchange=\"window.location ='adm.user.list?elementsPerPage=' + this.options[this.selectedIndex].value;\">\n");
      out.write("                            <option value=\"10\">10</option>\n");
      out.write("                            <option value=\"25\">25</option>\n");
      out.write("                            <option value=\"50\">50</option>\n");
      out.write("                            <option value=\"100\">100</option>\n");
      out.write("                        </select>\n");
      out.write("                        <small>Showing ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${entries_current_start}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" to ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${entries_current_end}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" of ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${entries_total}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" entries</small>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"col align-self-end\">\n");
      out.write("                    <nav aria-label=\"Page navigation example\">\n");
      out.write("                        <ul class=\"pagination justify-content-end\" id=\"pages1\">\n");
      out.write("                        </ul>\n");
      out.write("                    </nav>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"table-data material-table table-responsive table-user\">\n");
      out.write("            <table id=\"usersTable\" name=\"usersTable\" class=\"table table-hover\">\n");
      out.write("                <thead>\n");
      out.write("                <tr>\n");
      out.write("                    <th>AccountID</th>\n");
      out.write("                    <th>Email</th>\n");
      out.write("                    <th>Name</th>\n");
      out.write("                    <th>Status</th>\n");
      out.write("                    <th>Age</th>\n");
      out.write("                    <th>Weight</th>\n");
      out.write("                    <th>Height</th>\n");
      out.write("                    <th>Intake</th>\n");
      out.write("                    <th>PFC</th>\n");
      out.write("                    <th>\n");
      out.write("                        <a href=\"adm.user.new\">\n");
      out.write("                            <i class=\"icon icon-plus\"></i>\n");
      out.write("                        </a>\n");
      out.write("                    </th>\n");
      out.write("                </tr>\n");
      out.write("                </thead>\n");
      out.write("                <tbody id=\"usersTableBody\" name=\"usersTableBody\">\n");
      out.write("                <input type=\"hidden\" id=\"numberOfUsersShown\" name=\"numberOfUsersShown\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${number_of_users_shown}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\n");
      out.write("                ");
      //  ano:iterate
      net.anotheria.tags.IterateTag _jspx_th_ano_005fiterate_005f0 = (net.anotheria.tags.IterateTag) _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.get(net.anotheria.tags.IterateTag.class);
      boolean _jspx_th_ano_005fiterate_005f0_reused = false;
      try {
        _jspx_th_ano_005fiterate_005f0.setPageContext(_jspx_page_context);
        _jspx_th_ano_005fiterate_005f0.setParent(null);
        // /com/wominator/backend/admin/user/jsp/Users.jsp(56,16) name = id type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f0.setId("user");
        // /com/wominator/backend/admin/user/jsp/Users.jsp(56,16) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f0.setName("users");
        // /com/wominator/backend/admin/user/jsp/Users.jsp(56,16) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_ano_005fiterate_005f0.setType("com.wominator.backend.api.user.UserAO");
        int _jspx_eval_ano_005fiterate_005f0 = _jspx_th_ano_005fiterate_005f0.doStartTag();
        if (_jspx_eval_ano_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          com.wominator.backend.api.user.UserAO user = null;
          if (_jspx_eval_ano_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_ano_005fiterate_005f0);
          }
          user = (com.wominator.backend.api.user.UserAO) _jspx_page_context.findAttribute("user");
          do {
            out.write("\n");
            out.write("                <tr id=\"usersTableRow\" name=\"usersTableRow\">\n");
            out.write("                    <td><a href=\"adm.user.edit?accountId=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.account.accountId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.account.accountId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a></td>\n");
            out.write("                    <td><a href=\"mailto:");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.account.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.account.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a></td>\n");
            out.write("                    <td><a href=\"adm.user.edit?accountId=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.account.accountId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.account.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a></td>\n");
            out.write("                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.account.statusString}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.personalValues.age}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.personalValues.weight}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.personalValues.height}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.personalValues.caloriesIntake}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.personalValues.protein}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('/');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.personalValues.fat}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('/');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.personalValues.carbohydrates}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                    <td>\n");
            out.write("                        <div class=\"dropdown dropdown-icon\">\n");
            out.write("                            <button class=\"btn btn-success dropdown-toggle btn-md btn-block\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n");
            out.write("                                <i class=\"icon-menu\"></i>\n");
            out.write("                            </button>\n");
            out.write("                            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n");
            out.write("                                <a href=\"adm.user.edit?accountId=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.account.accountId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" class=\"dropdown-item btn btn-success-light btn-md btn-block\"><i class=\"icon-edit-profile\"></i></a>\n");
            out.write("                                <a href=\"adm.measurement.list?accountId=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.account.accountId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" class=\"dropdown-item btn btn-success-light btn-md btn-block\"><i class=\"icon-statistic\"></i></a>\n");
            out.write("                                <a href=\"adm.user.delete?accountId=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.account.accountId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" class=\"dropdown-item btn btn-danger btn-md btn-block\"><i class=\"icon-bin\"></i></a>\n");
            out.write("                            </div>\n");
            out.write("                        </div>\n");
            out.write("                    </td>\n");
            out.write("                </tr>\n");
            out.write("                ");
            int evalDoAfterBody = _jspx_th_ano_005fiterate_005f0.doAfterBody();
            user = (com.wominator.backend.api.user.UserAO) _jspx_page_context.findAttribute("user");
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_ano_005fiterate_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_ano_005fiterate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fano_005fiterate_0026_005ftype_005fname_005fid.reuse(_jspx_th_ano_005fiterate_005f0);
        _jspx_th_ano_005fiterate_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_ano_005fiterate_005f0, _jsp_getInstanceManager(), _jspx_th_ano_005fiterate_005f0_reused);
      }
      out.write("\n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"content-footer\">\n");
      out.write("            <div class=\"contant-header\">\n");
      out.write("                <div class=\"row\">\n");
      out.write("                    <div class=\"col-sm-3\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            ");
      out.write("\n");
      out.write("                            <select class=\"form-control\" id=\"elements-per-page-dropdown2\" onchange=\"window.location ='adm.user.list?elementsPerPage=' + this.options[this.selectedIndex].value;\">\n");
      out.write("                                <option value=\"10\">10</option>\n");
      out.write("                                <option value=\"25\">25</option>\n");
      out.write("                                <option value=\"50\">50</option>\n");
      out.write("                                <option value=\"100\">100</option>\n");
      out.write("                            </select>\n");
      out.write("                            <small>Showing ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${entries_current_start}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" to ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${entries_current_end}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" of ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${entries_total}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" entries</small>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"col align-self-end\">\n");
      out.write("                        <nav aria-label=\"Page navigation example\">\n");
      out.write("                            <ul class=\"pagination justify-content-end\" id=\"pages2\">\n");
      out.write("                            </ul>\n");
      out.write("                        </nav>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</section>\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../shared/jsp/Footer.jsp", out, false);
      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("<script>\n");
      out.write("    // Set an option of the dropdown to be selected\n");
      out.write("    function setSelectedIndex(dropdown, selectedName) {\n");
      out.write("        // For all possible options in the dropdown\n");
      out.write("        for ( var i = 0; i < dropdown.options.length; i++ ) {\n");
      out.write("            // If current option has the selection name\n");
      out.write("            if ( dropdown.options[i].text == selectedName ) {\n");
      out.write("                // Select it\n");
      out.write("                dropdown.options[i].selected = true;\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // Get current elementsPerPage parameter\n");
      out.write("    var url_string = window.location.href\n");
      out.write("    var url = new URL(url_string);\n");
      out.write("    var elementsPerPage = url.searchParams.get(\"elementsPerPage\");\n");
      out.write("    if (elementsPerPage == null || elementsPerPage == 0)\n");
      out.write("        elementsPerPage = \"10\";\n");
      out.write("\n");
      out.write("    // Set correct selection in the dropdowns\n");
      out.write("    setSelectedIndex(document.getElementById(\"elements-per-page-dropdown1\"), elementsPerPage);\n");
      out.write("    setSelectedIndex(document.getElementById(\"elements-per-page-dropdown2\"), elementsPerPage);\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    // Create a page link\n");
      out.write("    function getPageLink(page, elementsPerPage, searchKeyword) {\n");
      out.write("        var pageLink = 'adm.user.list?';\n");
      out.write("        if (page != null)\n");
      out.write("            pageLink = pageLink + 'page=' + page;\n");
      out.write("        if (elementsPerPage != null)\n");
      out.write("            pageLink = pageLink + '&elementsPerPage=' + elementsPerPage;\n");
      out.write("        if (searchKeyword != null)\n");
      out.write("            pageLink = pageLink + '&searchKeyword=' + searchKeyword;\n");
      out.write("        return pageLink;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // Generate a list and push to html wrapper\n");
      out.write("    function generateLinksToPages(wrapper, currentPage, elementsPerPage, pageCount, searchKeyword) {\n");
      out.write("        var generatedHTML = '';\n");
      out.write("\n");
      out.write("        // Determine links to prev page\n");
      out.write("        var prevPageLink = '#';\n");
      out.write("        if (currentPage > 0)\n");
      out.write("            prevPageLink = getPageLink(currentPage - 1, elementsPerPage, searchKeyword);\n");
      out.write("\n");
      out.write("        // Determine links to next page\n");
      out.write("        var nextPageLink = '#';\n");
      out.write("        if (currentPage < pageCount - 1)\n");
      out.write("            nextPageLink = getPageLink(currentPage + 1, elementsPerPage, searchKeyword);\n");
      out.write("\n");
      out.write("        // Previous page section\n");
      out.write("        generatedHTML +=\n");
      out.write("            '<a class=\"page-link\" href=\"' + prevPageLink + '\" aria-label=\"Previous\">\\n' +\n");
      out.write("            '    <span aria-hidden=\"true\">&laquo;</span>\\n' +\n");
      out.write("            '    <span class=\"sr-only\">Previous</span>\\n' +\n");
      out.write("            '</a>';\n");
      out.write("\n");
      out.write("        // For each page\n");
      out.write("        for (var i = 0; i < pageCount; i++) {\n");
      out.write("            // If this is not the current page\n");
      out.write("            if (i != currentPage) {\n");
      out.write("                // Generate a new link\n");
      out.write("                var link = getPageLink(i, elementsPerPage, searchKeyword);;\n");
      out.write("\n");
      out.write("                // Add new list element to html\n");
      out.write("                generatedHTML += '<li class=\"page-item\"><a class=\"page-link\" href=' + link + '>' + (i + 1) + '</a></li>'\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            // If it is a current page\n");
      out.write("            else {\n");
      out.write("                // Add new list element to html, no link needed.\n");
      out.write("                generatedHTML += '<li class=\"page-item active\"><a class=\"page-link\" href=\"#\">' + (i + 1) + '</a></li>'\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // Next page section\n");
      out.write("        generatedHTML +=\n");
      out.write("            '<a class=\"page-link\" href=\"' + nextPageLink + '\" aria-label=\"Next\">\\n' +\n");
      out.write("            '   <span aria-hidden=\"true\">&raquo;</span>\\n' +\n");
      out.write("            '   <span class=\"sr-only\">Next</span>\\n' +\n");
      out.write("            '</a>';\n");
      out.write("\n");
      out.write("        // Push changes to html\n");
      out.write("        wrapper.innerHTML += generatedHTML;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // Retrieve current page value\n");
      out.write("    var url_string = window.location.href\n");
      out.write("    var url = new URL(url_string);\n");
      out.write("    var searchKeyword = url.searchParams.get(\"searchKeyword\");\n");
      out.write("    var currentPage = url.searchParams.get(\"page\");\n");
      out.write("    if (currentPage == null)\n");
      out.write("        currentPage = 0;\n");
      out.write("    else\n");
      out.write("        currentPage = parseInt(currentPage);\n");
      out.write("\n");
      out.write("    // Retrieve elements per page value\n");
      out.write("    var elementsPerPageDropdown = document.getElementById(\"elements-per-page-dropdown1\");\n");
      out.write("    var elementsPerPage = elementsPerPageDropdown.options[elementsPerPageDropdown.selectedIndex].value;\n");
      out.write("\n");
      out.write("    // Retrieve total number of pages\n");
      out.write("    var pageCount = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page_count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\n");
      out.write("    // Generate 2 pages links lists\n");
      out.write("    generateLinksToPages(document.getElementById(\"pages1\"), currentPage, elementsPerPage, pageCount, searchKeyword);\n");
      out.write("    generateLinksToPages(document.getElementById(\"pages2\"), currentPage, elementsPerPage, pageCount, searchKeyword);\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    function generateSearchLink(searchKeyword, elementsPerPage) {\n");
      out.write("        var searchLink = 'adm.user.list?';\n");
      out.write("        if (elementsPerPage != null && elementsPerPage.length != 0)\n");
      out.write("            searchLink = searchLink + '&elementsPerPage=' + elementsPerPage;\n");
      out.write("        if (searchKeyword != null && searchKeyword.length != 0)\n");
      out.write("            searchLink = searchLink + '&searchKeyword=' + searchKeyword;\n");
      out.write("        return searchLink;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function updateSearchLink() {\n");
      out.write("        var searchKeyword = document.getElementById(\"searchKeyword\") == null ? null : document.getElementById(\"searchKeyword\").value;\n");
      out.write("        var elementsPerPage = url.searchParams.get(\"elementsPerPage\");\n");
      out.write("        var searchButton = document.getElementById(\"searchButton\");\n");
      out.write("        var searchLink = generateSearchLink(searchKeyword, elementsPerPage);\n");
      out.write("        searchButton.setAttribute(\"href\", searchLink);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function generateSearchBar() {\n");
      out.write("        // F\n");
      out.write("        var searchKeyword = document.getElementById(\"searchKeyword\") == null ? null : document.getElementById(\"searchKeyword\").value;\n");
      out.write("        var elementsPerPage = url.searchParams.get(\"elementsPerPage\") == null ? 10 : url.searchParams.get(\"elementsPerPage\");\n");
      out.write("        var searchForm = document.getElementById(\"searchForm\");\n");
      out.write("        var searchLink = generateSearchLink(searchKeyword, elementsPerPage);\n");
      out.write("        var generatedHTML = '';\n");
      out.write("\n");
      out.write("        if (url.searchParams.get(\"searchKeyword\") != null && url.searchParams.get(\"searchKeyword\").length != 0) {\n");
      out.write("            generatedHTML +=\n");
      out.write("                '                    <input id=\"elementsPerPage\" name=\"elementsPerPage\" type=\"hidden\" value=\"' + elementsPerPage + '\">' +\n");
      out.write("                '                    <input id=\"searchKeyword\" oninput=\"updateSearchLink();\" name=\"searchKeyword\" class=\"form-control\" type=\"text\" placeholder=\"Search\" value=\"' + url.searchParams.get(\"searchKeyword\") + '\">\\n' +\n");
      out.write("                '                    <a id=\"searchButton\" class=\"btn btn-success btn-icon\" href=\"' + searchLink + '\">\\n' +\n");
      out.write("                '                        <i class=\"icon-search\"></i>\\n' +\n");
      out.write("                '                    </a>'\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        else {\n");
      out.write("            generatedHTML +=\n");
      out.write("                '                    <input id=\"elementsPerPage\" name=\"elementsPerPage\" type=\"hidden\" value=\"' + elementsPerPage + '\">' +\n");
      out.write("                '                    <input id=\"searchKeyword\" oninput=\"updateSearchLink();\" name=\"searchKeyword\" class=\"form-control\" type=\"text\" placeholder=\"Search\">\\n' +\n");
      out.write("                '                    <a id=\"searchButton\" class=\"btn btn-success btn-icon\" href=\"' + searchLink + '\">\\n' +\n");
      out.write("                '                        <i class=\"icon-search\"></i>\\n' +\n");
      out.write("                '                    </a>'\n");
      out.write("        }\n");
      out.write("\n");
      out.write("\n");
      out.write("        // Push changes to html\n");
      out.write("        searchForm.innerHTML = generatedHTML;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    generateSearchBar();\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    // Find the table\n");
      out.write("    var tableBody = document.getElementById(\"usersTableBody\");\n");
      out.write("\n");
      out.write("    if (document.getElementById(\"numberOfUsersShown\").value === \"0\") {\n");
      out.write("        var generatedHtml = '<tr><td colspan=\"10\"><h3 class=\"text-center\">No matching records found</h3></td></tr>';\n");
      out.write("\n");
      out.write("        tableBody.innerHTML += generatedHtml;\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
